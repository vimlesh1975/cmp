'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace XdcamWebReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MediaStationBinding", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class MediaStationService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private OpenPlayerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClosePlayerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlayerStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlayerScopeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlayerStopMarkDetectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPlayerStopMarkDetectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PlayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PauseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FastForwardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RewindOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ShuttleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StepOperationCompleted As System.Threading.SendOrPostCallback
        
        Private JogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OpenRecorderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CloseRecorderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecorderStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClipPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetClipPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClipListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClipThumbnailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopyFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCopyStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetFileDeleteProtectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RenameFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FormatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FinalizeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDriveModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDriveStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMediaPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemErrorWarningOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ShutdownOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AbortProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemEventSessionIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddEssenceMarkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteEssenceMarkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPlayerTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlayerTimeLineStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPlayerTimeLineStartTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StartPlayerTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StopPlayerTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlayerTimeLineEventStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPlayerTimeLineEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePlayerTimeLineEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRecorderTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecorderTimeLineStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRecorderTimeLineStartTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StartRecorderTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StopRecorderTimeLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecorderTimeLineEventStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddRecorderTimeLineEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRecorderTimeLineEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePlayerTimeLineAllEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRecorderTimeLineAllEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddEssenceMarkToUnnamedRecordingClipOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12
            'Me.Url = My.MySettings.Default.XdcamSoapClient_XdcamWebReference_MediaStationService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event OpenPlayerCompleted As OpenPlayerCompletedEventHandler
        
        '''<remarks/>
        Public Event ClosePlayerCompleted As ClosePlayerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlayerStatusCompleted As GetPlayerStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlayerScopeCompleted As GetPlayerScopeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlayerStopMarkDetectionCompleted As GetPlayerStopMarkDetectionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPlayerStopMarkDetectionCompleted As SetPlayerStopMarkDetectionCompletedEventHandler
        
        '''<remarks/>
        Public Event PlayCompleted As PlayCompletedEventHandler
        
        '''<remarks/>
        Public Event PauseCompleted As PauseCompletedEventHandler
        
        '''<remarks/>
        Public Event FastForwardCompleted As FastForwardCompletedEventHandler
        
        '''<remarks/>
        Public Event RewindCompleted As RewindCompletedEventHandler
        
        '''<remarks/>
        Public Event ShuttleCompleted As ShuttleCompletedEventHandler
        
        '''<remarks/>
        Public Event StepCompleted As StepCompletedEventHandler
        
        '''<remarks/>
        Public Event JogCompleted As JogCompletedEventHandler
        
        '''<remarks/>
        Public Event VarCompleted As VarCompletedEventHandler
        
        '''<remarks/>
        Public Event OpenRecorderCompleted As OpenRecorderCompletedEventHandler
        
        '''<remarks/>
        Public Event CloseRecorderCompleted As CloseRecorderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecorderStatusCompleted As GetRecorderStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClipPropertiesCompleted As GetClipPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetClipPropertiesCompleted As SetClipPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClipListCompleted As GetClipListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClipThumbnailCompleted As GetClipThumbnailCompletedEventHandler
        
        '''<remarks/>
        Public Event CopyFileCompleted As CopyFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCopyStatusCompleted As GetCopyStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SetFileDeleteProtectionCompleted As SetFileDeleteProtectionCompletedEventHandler
        
        '''<remarks/>
        Public Event RenameFileCompleted As RenameFileCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileCompleted As DeleteFileCompletedEventHandler
        
        '''<remarks/>
        Public Event FormatCompleted As FormatCompletedEventHandler
        
        '''<remarks/>
        Public Event EjectCompleted As EjectCompletedEventHandler
        
        '''<remarks/>
        Public Event FinalizeCompleted As FinalizeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDriveModeCompleted As SetDriveModeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDriveStatusCompleted As GetDriveStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMediaPropertiesCompleted As GetMediaPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemPropertiesCompleted As GetSystemPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemStatusCompleted As GetSystemStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemErrorWarningCompleted As GetSystemErrorWarningCompletedEventHandler
        
        '''<remarks/>
        Public Event ShutdownCompleted As ShutdownCompletedEventHandler
        
        '''<remarks/>
        Public Event AbortProcessCompleted As AbortProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemEventSessionIdCompleted As GetSystemEventSessionIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemEventCompleted As GetSystemEventCompletedEventHandler
        
        '''<remarks/>
        Public Event AddEssenceMarkCompleted As AddEssenceMarkCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteEssenceMarkCompleted As DeleteEssenceMarkCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPlayerTimeLineCompleted As SetPlayerTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlayerTimeLineStatusCompleted As GetPlayerTimeLineStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPlayerTimeLineStartTimeCompleted As SetPlayerTimeLineStartTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event StartPlayerTimeLineCompleted As StartPlayerTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event StopPlayerTimeLineCompleted As StopPlayerTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlayerTimeLineEventStatusCompleted As GetPlayerTimeLineEventStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPlayerTimeLineEventCompleted As AddPlayerTimeLineEventCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePlayerTimeLineEventCompleted As DeletePlayerTimeLineEventCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRecorderTimeLineCompleted As SetRecorderTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecorderTimeLineStatusCompleted As GetRecorderTimeLineStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRecorderTimeLineStartTimeCompleted As SetRecorderTimeLineStartTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event StartRecorderTimeLineCompleted As StartRecorderTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event StopRecorderTimeLineCompleted As StopRecorderTimeLineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecorderTimeLineEventStatusCompleted As GetRecorderTimeLineEventStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event AddRecorderTimeLineEventCompleted As AddRecorderTimeLineEventCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRecorderTimeLineEventCompleted As DeleteRecorderTimeLineEventCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRecorderTimeLineTimeCodeGeneratorModeCompleted As SetRecorderTimeLineTimeCodeGeneratorModeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRecorderTimeLineTimeCodeGeneratorStartTimeCompleted As SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePlayerTimeLineAllEventCompleted As DeletePlayerTimeLineAllEventCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRecorderTimeLineAllEventCompleted As DeleteRecorderTimeLineAllEventCompletedEventHandler
        
        '''<remarks/>
        Public Event AddEssenceMarkToUnnamedRecordingClipCompleted As AddEssenceMarkToUnnamedRecordingClipCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/OpenPlayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function OpenPlayer(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal OpenPlayerRequest As OpenPlayerRequest) As <System.Xml.Serialization.XmlElementAttribute("OpenPlayerResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> OpenPlayerResponse
            Dim results() As Object = Me.Invoke("OpenPlayer", New Object() {OpenPlayerRequest})
            Return CType(results(0),OpenPlayerResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OpenPlayerAsync(ByVal OpenPlayerRequest As OpenPlayerRequest)
            Me.OpenPlayerAsync(OpenPlayerRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenPlayerAsync(ByVal OpenPlayerRequest As OpenPlayerRequest, ByVal userState As Object)
            If (Me.OpenPlayerOperationCompleted Is Nothing) Then
                Me.OpenPlayerOperationCompleted = AddressOf Me.OnOpenPlayerOperationCompleted
            End If
            Me.InvokeAsync("OpenPlayer", New Object() {OpenPlayerRequest}, Me.OpenPlayerOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenPlayerOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenPlayerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenPlayerCompleted(Me, New OpenPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/ClosePlayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function ClosePlayer(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal ClosePlayerRequest As ClosePlayerRequest) As <System.Xml.Serialization.XmlElementAttribute("ClosePlayerResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ClosePlayerResponse
            Dim results() As Object = Me.Invoke("ClosePlayer", New Object() {ClosePlayerRequest})
            Return CType(results(0),ClosePlayerResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClosePlayerAsync(ByVal ClosePlayerRequest As ClosePlayerRequest)
            Me.ClosePlayerAsync(ClosePlayerRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClosePlayerAsync(ByVal ClosePlayerRequest As ClosePlayerRequest, ByVal userState As Object)
            If (Me.ClosePlayerOperationCompleted Is Nothing) Then
                Me.ClosePlayerOperationCompleted = AddressOf Me.OnClosePlayerOperationCompleted
            End If
            Me.InvokeAsync("ClosePlayer", New Object() {ClosePlayerRequest}, Me.ClosePlayerOperationCompleted, userState)
        End Sub
        
        Private Sub OnClosePlayerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClosePlayerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClosePlayerCompleted(Me, New ClosePlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetPlayerStatu"& _ 
            "s", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetPlayerStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetPlayerStatusRequest As GetPlayerStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetPlayerStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetPlayerStatusResponse
            Dim results() As Object = Me.Invoke("GetPlayerStatus", New Object() {GetPlayerStatusRequest})
            Return CType(results(0),GetPlayerStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlayerStatusAsync(ByVal GetPlayerStatusRequest As GetPlayerStatusRequest)
            Me.GetPlayerStatusAsync(GetPlayerStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlayerStatusAsync(ByVal GetPlayerStatusRequest As GetPlayerStatusRequest, ByVal userState As Object)
            If (Me.GetPlayerStatusOperationCompleted Is Nothing) Then
                Me.GetPlayerStatusOperationCompleted = AddressOf Me.OnGetPlayerStatusOperationCompleted
            End If
            Me.InvokeAsync("GetPlayerStatus", New Object() {GetPlayerStatusRequest}, Me.GetPlayerStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlayerStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlayerStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlayerStatusCompleted(Me, New GetPlayerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetPlayerScope"& _ 
            "", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetPlayerScope(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetPlayerScopeRequest As GetPlayerScopeRequest) As <System.Xml.Serialization.XmlElementAttribute("GetPlayerScopeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetPlayerScopeResponse
            Dim results() As Object = Me.Invoke("GetPlayerScope", New Object() {GetPlayerScopeRequest})
            Return CType(results(0),GetPlayerScopeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlayerScopeAsync(ByVal GetPlayerScopeRequest As GetPlayerScopeRequest)
            Me.GetPlayerScopeAsync(GetPlayerScopeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlayerScopeAsync(ByVal GetPlayerScopeRequest As GetPlayerScopeRequest, ByVal userState As Object)
            If (Me.GetPlayerScopeOperationCompleted Is Nothing) Then
                Me.GetPlayerScopeOperationCompleted = AddressOf Me.OnGetPlayerScopeOperationCompleted
            End If
            Me.InvokeAsync("GetPlayerScope", New Object() {GetPlayerScopeRequest}, Me.GetPlayerScopeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlayerScopeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlayerScopeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlayerScopeCompleted(Me, New GetPlayerScopeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetPlayerStopM"& _ 
            "arkDetection", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetPlayerStopMarkDetection(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetPlayerStopMarkDetectionRequest As GetPlayerStopMarkDetectionRequest) As <System.Xml.Serialization.XmlElementAttribute("GetPlayerStopMarkDetectionResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetPlayerStopMarkDetectionResponse
            Dim results() As Object = Me.Invoke("GetPlayerStopMarkDetection", New Object() {GetPlayerStopMarkDetectionRequest})
            Return CType(results(0),GetPlayerStopMarkDetectionResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlayerStopMarkDetectionAsync(ByVal GetPlayerStopMarkDetectionRequest As GetPlayerStopMarkDetectionRequest)
            Me.GetPlayerStopMarkDetectionAsync(GetPlayerStopMarkDetectionRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlayerStopMarkDetectionAsync(ByVal GetPlayerStopMarkDetectionRequest As GetPlayerStopMarkDetectionRequest, ByVal userState As Object)
            If (Me.GetPlayerStopMarkDetectionOperationCompleted Is Nothing) Then
                Me.GetPlayerStopMarkDetectionOperationCompleted = AddressOf Me.OnGetPlayerStopMarkDetectionOperationCompleted
            End If
            Me.InvokeAsync("GetPlayerStopMarkDetection", New Object() {GetPlayerStopMarkDetectionRequest}, Me.GetPlayerStopMarkDetectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlayerStopMarkDetectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlayerStopMarkDetectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlayerStopMarkDetectionCompleted(Me, New GetPlayerStopMarkDetectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetPlayerStopM"& _ 
            "arkDetection", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetPlayerStopMarkDetection(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetPlayerStopMarkDetectionRequest As SetPlayerStopMarkDetectionRequest) As <System.Xml.Serialization.XmlElementAttribute("SetPlayerStopMarkDetectionResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetPlayerStopMarkDetectionResponse
            Dim results() As Object = Me.Invoke("SetPlayerStopMarkDetection", New Object() {SetPlayerStopMarkDetectionRequest})
            Return CType(results(0),SetPlayerStopMarkDetectionResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPlayerStopMarkDetectionAsync(ByVal SetPlayerStopMarkDetectionRequest As SetPlayerStopMarkDetectionRequest)
            Me.SetPlayerStopMarkDetectionAsync(SetPlayerStopMarkDetectionRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPlayerStopMarkDetectionAsync(ByVal SetPlayerStopMarkDetectionRequest As SetPlayerStopMarkDetectionRequest, ByVal userState As Object)
            If (Me.SetPlayerStopMarkDetectionOperationCompleted Is Nothing) Then
                Me.SetPlayerStopMarkDetectionOperationCompleted = AddressOf Me.OnSetPlayerStopMarkDetectionOperationCompleted
            End If
            Me.InvokeAsync("SetPlayerStopMarkDetection", New Object() {SetPlayerStopMarkDetectionRequest}, Me.SetPlayerStopMarkDetectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPlayerStopMarkDetectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPlayerStopMarkDetectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPlayerStopMarkDetectionCompleted(Me, New SetPlayerStopMarkDetectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Play", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Play(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal PlayRequest As PlayRequest) As <System.Xml.Serialization.XmlElementAttribute("PlayResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> PlayResponse
            Dim results() As Object = Me.Invoke("Play", New Object() {PlayRequest})
            Return CType(results(0),PlayResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PlayAsync(ByVal PlayRequest As PlayRequest)
            Me.PlayAsync(PlayRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PlayAsync(ByVal PlayRequest As PlayRequest, ByVal userState As Object)
            If (Me.PlayOperationCompleted Is Nothing) Then
                Me.PlayOperationCompleted = AddressOf Me.OnPlayOperationCompleted
            End If
            Me.InvokeAsync("Play", New Object() {PlayRequest}, Me.PlayOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlayOperationCompleted(ByVal arg As Object)
            If (Not (Me.PlayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PlayCompleted(Me, New PlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Pause", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Pause(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal PauseRequest As PauseRequest) As <System.Xml.Serialization.XmlElementAttribute("PauseResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> PauseResponse
            Dim results() As Object = Me.Invoke("Pause", New Object() {PauseRequest})
            Return CType(results(0),PauseResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PauseAsync(ByVal PauseRequest As PauseRequest)
            Me.PauseAsync(PauseRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PauseAsync(ByVal PauseRequest As PauseRequest, ByVal userState As Object)
            If (Me.PauseOperationCompleted Is Nothing) Then
                Me.PauseOperationCompleted = AddressOf Me.OnPauseOperationCompleted
            End If
            Me.InvokeAsync("Pause", New Object() {PauseRequest}, Me.PauseOperationCompleted, userState)
        End Sub
        
        Private Sub OnPauseOperationCompleted(ByVal arg As Object)
            If (Not (Me.PauseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PauseCompleted(Me, New PauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/FastForward", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function FastForward(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal FastForwardRequest As FastForwardRequest) As <System.Xml.Serialization.XmlElementAttribute("FastForwardResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> FastForwardResponse
            Dim results() As Object = Me.Invoke("FastForward", New Object() {FastForwardRequest})
            Return CType(results(0),FastForwardResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FastForwardAsync(ByVal FastForwardRequest As FastForwardRequest)
            Me.FastForwardAsync(FastForwardRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FastForwardAsync(ByVal FastForwardRequest As FastForwardRequest, ByVal userState As Object)
            If (Me.FastForwardOperationCompleted Is Nothing) Then
                Me.FastForwardOperationCompleted = AddressOf Me.OnFastForwardOperationCompleted
            End If
            Me.InvokeAsync("FastForward", New Object() {FastForwardRequest}, Me.FastForwardOperationCompleted, userState)
        End Sub
        
        Private Sub OnFastForwardOperationCompleted(ByVal arg As Object)
            If (Not (Me.FastForwardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FastForwardCompleted(Me, New FastForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Rewind", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Rewind(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal RewindRequest As RewindRequest) As <System.Xml.Serialization.XmlElementAttribute("RewindResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> RewindResponse
            Dim results() As Object = Me.Invoke("Rewind", New Object() {RewindRequest})
            Return CType(results(0),RewindResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RewindAsync(ByVal RewindRequest As RewindRequest)
            Me.RewindAsync(RewindRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RewindAsync(ByVal RewindRequest As RewindRequest, ByVal userState As Object)
            If (Me.RewindOperationCompleted Is Nothing) Then
                Me.RewindOperationCompleted = AddressOf Me.OnRewindOperationCompleted
            End If
            Me.InvokeAsync("Rewind", New Object() {RewindRequest}, Me.RewindOperationCompleted, userState)
        End Sub
        
        Private Sub OnRewindOperationCompleted(ByVal arg As Object)
            If (Not (Me.RewindCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RewindCompleted(Me, New RewindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Shuttle", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Shuttle(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal ShuttleRequest As ShuttleRequest) As <System.Xml.Serialization.XmlElementAttribute("ShuttleResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ShuttleResponse
            Dim results() As Object = Me.Invoke("Shuttle", New Object() {ShuttleRequest})
            Return CType(results(0),ShuttleResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ShuttleAsync(ByVal ShuttleRequest As ShuttleRequest)
            Me.ShuttleAsync(ShuttleRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ShuttleAsync(ByVal ShuttleRequest As ShuttleRequest, ByVal userState As Object)
            If (Me.ShuttleOperationCompleted Is Nothing) Then
                Me.ShuttleOperationCompleted = AddressOf Me.OnShuttleOperationCompleted
            End If
            Me.InvokeAsync("Shuttle", New Object() {ShuttleRequest}, Me.ShuttleOperationCompleted, userState)
        End Sub
        
        Private Sub OnShuttleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ShuttleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ShuttleCompleted(Me, New ShuttleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Step", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function [Step](<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal StepRequest As StepRequest) As <System.Xml.Serialization.XmlElementAttribute("StepResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> StepResponse
            Dim results() As Object = Me.Invoke("Step", New Object() {StepRequest})
            Return CType(results(0),StepResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StepAsync(ByVal StepRequest As StepRequest)
            Me.StepAsync(StepRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StepAsync(ByVal StepRequest As StepRequest, ByVal userState As Object)
            If (Me.StepOperationCompleted Is Nothing) Then
                Me.StepOperationCompleted = AddressOf Me.OnStepOperationCompleted
            End If
            Me.InvokeAsync("Step", New Object() {StepRequest}, Me.StepOperationCompleted, userState)
        End Sub
        
        Private Sub OnStepOperationCompleted(ByVal arg As Object)
            If (Not (Me.StepCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StepCompleted(Me, New StepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Jog", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Jog(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal JogRequest As JogRequest) As <System.Xml.Serialization.XmlElementAttribute("JogResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> JogResponse
            Dim results() As Object = Me.Invoke("Jog", New Object() {JogRequest})
            Return CType(results(0),JogResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub JogAsync(ByVal JogRequest As JogRequest)
            Me.JogAsync(JogRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub JogAsync(ByVal JogRequest As JogRequest, ByVal userState As Object)
            If (Me.JogOperationCompleted Is Nothing) Then
                Me.JogOperationCompleted = AddressOf Me.OnJogOperationCompleted
            End If
            Me.InvokeAsync("Jog", New Object() {JogRequest}, Me.JogOperationCompleted, userState)
        End Sub
        
        Private Sub OnJogOperationCompleted(ByVal arg As Object)
            If (Not (Me.JogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent JogCompleted(Me, New JogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Var", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Var(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal VarRequest As VarRequest) As <System.Xml.Serialization.XmlElementAttribute("VarResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> VarResponse
            Dim results() As Object = Me.Invoke("Var", New Object() {VarRequest})
            Return CType(results(0),VarResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VarAsync(ByVal VarRequest As VarRequest)
            Me.VarAsync(VarRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VarAsync(ByVal VarRequest As VarRequest, ByVal userState As Object)
            If (Me.VarOperationCompleted Is Nothing) Then
                Me.VarOperationCompleted = AddressOf Me.OnVarOperationCompleted
            End If
            Me.InvokeAsync("Var", New Object() {VarRequest}, Me.VarOperationCompleted, userState)
        End Sub
        
        Private Sub OnVarOperationCompleted(ByVal arg As Object)
            If (Not (Me.VarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VarCompleted(Me, New VarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/OpenRecorder", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function OpenRecorder(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal OpenRecorderRequest As OpenRecorderRequest) As <System.Xml.Serialization.XmlElementAttribute("OpenRecorderResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> OpenRecorderResponse
            Dim results() As Object = Me.Invoke("OpenRecorder", New Object() {OpenRecorderRequest})
            Return CType(results(0),OpenRecorderResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OpenRecorderAsync(ByVal OpenRecorderRequest As OpenRecorderRequest)
            Me.OpenRecorderAsync(OpenRecorderRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OpenRecorderAsync(ByVal OpenRecorderRequest As OpenRecorderRequest, ByVal userState As Object)
            If (Me.OpenRecorderOperationCompleted Is Nothing) Then
                Me.OpenRecorderOperationCompleted = AddressOf Me.OnOpenRecorderOperationCompleted
            End If
            Me.InvokeAsync("OpenRecorder", New Object() {OpenRecorderRequest}, Me.OpenRecorderOperationCompleted, userState)
        End Sub
        
        Private Sub OnOpenRecorderOperationCompleted(ByVal arg As Object)
            If (Not (Me.OpenRecorderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OpenRecorderCompleted(Me, New OpenRecorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/CloseRecorder", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function CloseRecorder(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal CloseRecorderRequest As CloseRecorderRequest) As <System.Xml.Serialization.XmlElementAttribute("CloseRecorderResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> CloseRecorderResponse
            Dim results() As Object = Me.Invoke("CloseRecorder", New Object() {CloseRecorderRequest})
            Return CType(results(0),CloseRecorderResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CloseRecorderAsync(ByVal CloseRecorderRequest As CloseRecorderRequest)
            Me.CloseRecorderAsync(CloseRecorderRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CloseRecorderAsync(ByVal CloseRecorderRequest As CloseRecorderRequest, ByVal userState As Object)
            If (Me.CloseRecorderOperationCompleted Is Nothing) Then
                Me.CloseRecorderOperationCompleted = AddressOf Me.OnCloseRecorderOperationCompleted
            End If
            Me.InvokeAsync("CloseRecorder", New Object() {CloseRecorderRequest}, Me.CloseRecorderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCloseRecorderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CloseRecorderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CloseRecorderCompleted(Me, New CloseRecorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetRecorderSta"& _ 
            "tus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetRecorderStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetRecorderStatusRequest As GetRecorderStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetRecorderStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetRecorderStatusResponse
            Dim results() As Object = Me.Invoke("GetRecorderStatus", New Object() {GetRecorderStatusRequest})
            Return CType(results(0),GetRecorderStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecorderStatusAsync(ByVal GetRecorderStatusRequest As GetRecorderStatusRequest)
            Me.GetRecorderStatusAsync(GetRecorderStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecorderStatusAsync(ByVal GetRecorderStatusRequest As GetRecorderStatusRequest, ByVal userState As Object)
            If (Me.GetRecorderStatusOperationCompleted Is Nothing) Then
                Me.GetRecorderStatusOperationCompleted = AddressOf Me.OnGetRecorderStatusOperationCompleted
            End If
            Me.InvokeAsync("GetRecorderStatus", New Object() {GetRecorderStatusRequest}, Me.GetRecorderStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecorderStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecorderStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecorderStatusCompleted(Me, New GetRecorderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetClipPropert"& _ 
            "ies", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetClipProperties(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetClipPropertiesRequest As GetClipPropertiesRequest) As <System.Xml.Serialization.XmlElementAttribute("GetClipPropertiesResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetClipPropertiesResponse
            Dim results() As Object = Me.Invoke("GetClipProperties", New Object() {GetClipPropertiesRequest})
            Return CType(results(0),GetClipPropertiesResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClipPropertiesAsync(ByVal GetClipPropertiesRequest As GetClipPropertiesRequest)
            Me.GetClipPropertiesAsync(GetClipPropertiesRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClipPropertiesAsync(ByVal GetClipPropertiesRequest As GetClipPropertiesRequest, ByVal userState As Object)
            If (Me.GetClipPropertiesOperationCompleted Is Nothing) Then
                Me.GetClipPropertiesOperationCompleted = AddressOf Me.OnGetClipPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetClipProperties", New Object() {GetClipPropertiesRequest}, Me.GetClipPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClipPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClipPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClipPropertiesCompleted(Me, New GetClipPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetClipPropert"& _ 
            "ies", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetClipProperties(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetClipPropertiesRequest As SetClipPropertiesRequest) As <System.Xml.Serialization.XmlElementAttribute("SetClipPropertiesResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetClipPropertiesResponse
            Dim results() As Object = Me.Invoke("SetClipProperties", New Object() {SetClipPropertiesRequest})
            Return CType(results(0),SetClipPropertiesResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetClipPropertiesAsync(ByVal SetClipPropertiesRequest As SetClipPropertiesRequest)
            Me.SetClipPropertiesAsync(SetClipPropertiesRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetClipPropertiesAsync(ByVal SetClipPropertiesRequest As SetClipPropertiesRequest, ByVal userState As Object)
            If (Me.SetClipPropertiesOperationCompleted Is Nothing) Then
                Me.SetClipPropertiesOperationCompleted = AddressOf Me.OnSetClipPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetClipProperties", New Object() {SetClipPropertiesRequest}, Me.SetClipPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetClipPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetClipPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetClipPropertiesCompleted(Me, New SetClipPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetClipList", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetClipList(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetClipListRequest As GetClipListRequest) As <System.Xml.Serialization.XmlArrayAttribute("GetClipListResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation"), System.Xml.Serialization.XmlArrayItemAttribute("Clip", IsNullable:=false)> ClipInfo()
            Dim results() As Object = Me.Invoke("GetClipList", New Object() {GetClipListRequest})
            Return CType(results(0),ClipInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClipListAsync(ByVal GetClipListRequest As GetClipListRequest)
            Me.GetClipListAsync(GetClipListRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClipListAsync(ByVal GetClipListRequest As GetClipListRequest, ByVal userState As Object)
            If (Me.GetClipListOperationCompleted Is Nothing) Then
                Me.GetClipListOperationCompleted = AddressOf Me.OnGetClipListOperationCompleted
            End If
            Me.InvokeAsync("GetClipList", New Object() {GetClipListRequest}, Me.GetClipListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClipListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClipListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClipListCompleted(Me, New GetClipListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetClipThumbna"& _ 
            "il", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetClipThumbnail(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetClipThumbnailRequest As GetClipThumbnailRequest) As <System.Xml.Serialization.XmlElementAttribute("GetClipThumbnailResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetClipThumbnailResponse
            Dim results() As Object = Me.Invoke("GetClipThumbnail", New Object() {GetClipThumbnailRequest})
            Return CType(results(0),GetClipThumbnailResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClipThumbnailAsync(ByVal GetClipThumbnailRequest As GetClipThumbnailRequest)
            Me.GetClipThumbnailAsync(GetClipThumbnailRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClipThumbnailAsync(ByVal GetClipThumbnailRequest As GetClipThumbnailRequest, ByVal userState As Object)
            If (Me.GetClipThumbnailOperationCompleted Is Nothing) Then
                Me.GetClipThumbnailOperationCompleted = AddressOf Me.OnGetClipThumbnailOperationCompleted
            End If
            Me.InvokeAsync("GetClipThumbnail", New Object() {GetClipThumbnailRequest}, Me.GetClipThumbnailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClipThumbnailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClipThumbnailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClipThumbnailCompleted(Me, New GetClipThumbnailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/CopyFile", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function CopyFile(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal CopyFileRequest As CopyFileRequest) As <System.Xml.Serialization.XmlElementAttribute("CopyFileResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> CopyFileResponse
            Dim results() As Object = Me.Invoke("CopyFile", New Object() {CopyFileRequest})
            Return CType(results(0),CopyFileResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CopyFileAsync(ByVal CopyFileRequest As CopyFileRequest)
            Me.CopyFileAsync(CopyFileRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyFileAsync(ByVal CopyFileRequest As CopyFileRequest, ByVal userState As Object)
            If (Me.CopyFileOperationCompleted Is Nothing) Then
                Me.CopyFileOperationCompleted = AddressOf Me.OnCopyFileOperationCompleted
            End If
            Me.InvokeAsync("CopyFile", New Object() {CopyFileRequest}, Me.CopyFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopyFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CopyFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopyFileCompleted(Me, New CopyFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetCopyStatus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetCopyStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetCopyStatusRequest As GetCopyStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetCopyStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetCopyStatusResponse
            Dim results() As Object = Me.Invoke("GetCopyStatus", New Object() {GetCopyStatusRequest})
            Return CType(results(0),GetCopyStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCopyStatusAsync(ByVal GetCopyStatusRequest As GetCopyStatusRequest)
            Me.GetCopyStatusAsync(GetCopyStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCopyStatusAsync(ByVal GetCopyStatusRequest As GetCopyStatusRequest, ByVal userState As Object)
            If (Me.GetCopyStatusOperationCompleted Is Nothing) Then
                Me.GetCopyStatusOperationCompleted = AddressOf Me.OnGetCopyStatusOperationCompleted
            End If
            Me.InvokeAsync("GetCopyStatus", New Object() {GetCopyStatusRequest}, Me.GetCopyStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCopyStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCopyStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCopyStatusCompleted(Me, New GetCopyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetFileDeleteP"& _ 
            "rotection", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetFileDeleteProtection(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetFileDeleteProtectionRequest As SetFileDeleteProtectionRequest) As <System.Xml.Serialization.XmlElementAttribute("SetFileDeleteProtectionResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetFileDeleteProtectionResponse
            Dim results() As Object = Me.Invoke("SetFileDeleteProtection", New Object() {SetFileDeleteProtectionRequest})
            Return CType(results(0),SetFileDeleteProtectionResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetFileDeleteProtectionAsync(ByVal SetFileDeleteProtectionRequest As SetFileDeleteProtectionRequest)
            Me.SetFileDeleteProtectionAsync(SetFileDeleteProtectionRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetFileDeleteProtectionAsync(ByVal SetFileDeleteProtectionRequest As SetFileDeleteProtectionRequest, ByVal userState As Object)
            If (Me.SetFileDeleteProtectionOperationCompleted Is Nothing) Then
                Me.SetFileDeleteProtectionOperationCompleted = AddressOf Me.OnSetFileDeleteProtectionOperationCompleted
            End If
            Me.InvokeAsync("SetFileDeleteProtection", New Object() {SetFileDeleteProtectionRequest}, Me.SetFileDeleteProtectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetFileDeleteProtectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetFileDeleteProtectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetFileDeleteProtectionCompleted(Me, New SetFileDeleteProtectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/RenameFile", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function RenameFile(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal RenameFileRequest As RenameFileRequest) As <System.Xml.Serialization.XmlElementAttribute("RenameFileResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> RenameFileResponse
            Dim results() As Object = Me.Invoke("RenameFile", New Object() {RenameFileRequest})
            Return CType(results(0),RenameFileResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RenameFileAsync(ByVal RenameFileRequest As RenameFileRequest)
            Me.RenameFileAsync(RenameFileRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RenameFileAsync(ByVal RenameFileRequest As RenameFileRequest, ByVal userState As Object)
            If (Me.RenameFileOperationCompleted Is Nothing) Then
                Me.RenameFileOperationCompleted = AddressOf Me.OnRenameFileOperationCompleted
            End If
            Me.InvokeAsync("RenameFile", New Object() {RenameFileRequest}, Me.RenameFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnRenameFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.RenameFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RenameFileCompleted(Me, New RenameFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeleteFile", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeleteFile(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeleteFileRequest As DeleteFileRequest) As <System.Xml.Serialization.XmlElementAttribute("DeleteFileResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeleteFileResponse
            Dim results() As Object = Me.Invoke("DeleteFile", New Object() {DeleteFileRequest})
            Return CType(results(0),DeleteFileResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFileAsync(ByVal DeleteFileRequest As DeleteFileRequest)
            Me.DeleteFileAsync(DeleteFileRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileAsync(ByVal DeleteFileRequest As DeleteFileRequest, ByVal userState As Object)
            If (Me.DeleteFileOperationCompleted Is Nothing) Then
                Me.DeleteFileOperationCompleted = AddressOf Me.OnDeleteFileOperationCompleted
            End If
            Me.InvokeAsync("DeleteFile", New Object() {DeleteFileRequest}, Me.DeleteFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileCompleted(Me, New DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Format", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Format(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal FormatRequest As FormatRequest) As <System.Xml.Serialization.XmlElementAttribute("FormatResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> FormatResponse
            Dim results() As Object = Me.Invoke("Format", New Object() {FormatRequest})
            Return CType(results(0),FormatResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FormatAsync(ByVal FormatRequest As FormatRequest)
            Me.FormatAsync(FormatRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FormatAsync(ByVal FormatRequest As FormatRequest, ByVal userState As Object)
            If (Me.FormatOperationCompleted Is Nothing) Then
                Me.FormatOperationCompleted = AddressOf Me.OnFormatOperationCompleted
            End If
            Me.InvokeAsync("Format", New Object() {FormatRequest}, Me.FormatOperationCompleted, userState)
        End Sub
        
        Private Sub OnFormatOperationCompleted(ByVal arg As Object)
            If (Not (Me.FormatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FormatCompleted(Me, New FormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Eject", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Eject(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal EjectRequest As EjectRequest) As <System.Xml.Serialization.XmlElementAttribute("EjectResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> EjectResponse
            Dim results() As Object = Me.Invoke("Eject", New Object() {EjectRequest})
            Return CType(results(0),EjectResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EjectAsync(ByVal EjectRequest As EjectRequest)
            Me.EjectAsync(EjectRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjectAsync(ByVal EjectRequest As EjectRequest, ByVal userState As Object)
            If (Me.EjectOperationCompleted Is Nothing) Then
                Me.EjectOperationCompleted = AddressOf Me.OnEjectOperationCompleted
            End If
            Me.InvokeAsync("Eject", New Object() {EjectRequest}, Me.EjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjectCompleted(Me, New EjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/Finalize", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Finalize(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal FinalizeRequest As FinalizeRequest) As <System.Xml.Serialization.XmlElementAttribute("FinalizeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> FinalizeResponse
            Dim results() As Object = Me.Invoke("Finalize", New Object() {FinalizeRequest})
            Return CType(results(0),FinalizeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FinalizeAsync(ByVal FinalizeRequest As FinalizeRequest)
            Me.FinalizeAsync(FinalizeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FinalizeAsync(ByVal FinalizeRequest As FinalizeRequest, ByVal userState As Object)
            If (Me.FinalizeOperationCompleted Is Nothing) Then
                Me.FinalizeOperationCompleted = AddressOf Me.OnFinalizeOperationCompleted
            End If
            Me.InvokeAsync("Finalize", New Object() {FinalizeRequest}, Me.FinalizeOperationCompleted, userState)
        End Sub
        
        Private Sub OnFinalizeOperationCompleted(ByVal arg As Object)
            If (Not (Me.FinalizeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FinalizeCompleted(Me, New FinalizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetDriveMode", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetDriveMode(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetDriveModeRequest As SetDriveModeRequest) As <System.Xml.Serialization.XmlElementAttribute("SetDriveModeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetDriveModeResponse
            Dim results() As Object = Me.Invoke("SetDriveMode", New Object() {SetDriveModeRequest})
            Return CType(results(0),SetDriveModeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetDriveModeAsync(ByVal SetDriveModeRequest As SetDriveModeRequest)
            Me.SetDriveModeAsync(SetDriveModeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDriveModeAsync(ByVal SetDriveModeRequest As SetDriveModeRequest, ByVal userState As Object)
            If (Me.SetDriveModeOperationCompleted Is Nothing) Then
                Me.SetDriveModeOperationCompleted = AddressOf Me.OnSetDriveModeOperationCompleted
            End If
            Me.InvokeAsync("SetDriveMode", New Object() {SetDriveModeRequest}, Me.SetDriveModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDriveModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDriveModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDriveModeCompleted(Me, New SetDriveModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetDriveStatus"& _ 
            "", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetDriveStatus(<System.Xml.Serialization.XmlArrayAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation"), System.Xml.Serialization.XmlArrayItemAttribute("DriveId", IsNullable:=false)> ByVal GetDriveStatusRequest() As String) As <System.Xml.Serialization.XmlArrayAttribute("GetDriveStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation"), System.Xml.Serialization.XmlArrayItemAttribute("Status", IsNullable:=false)> DriveInfo()
            Dim results() As Object = Me.Invoke("GetDriveStatus", New Object() {GetDriveStatusRequest})
            Return CType(results(0),DriveInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDriveStatusAsync(ByVal GetDriveStatusRequest() As String)
            Me.GetDriveStatusAsync(GetDriveStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDriveStatusAsync(ByVal GetDriveStatusRequest() As String, ByVal userState As Object)
            If (Me.GetDriveStatusOperationCompleted Is Nothing) Then
                Me.GetDriveStatusOperationCompleted = AddressOf Me.OnGetDriveStatusOperationCompleted
            End If
            Me.InvokeAsync("GetDriveStatus", New Object() {GetDriveStatusRequest}, Me.GetDriveStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDriveStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDriveStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDriveStatusCompleted(Me, New GetDriveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetMediaProper"& _ 
            "ties", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetMediaProperties(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetMediaPropertiesRequest As GetMediaPropertiesRequest) As <System.Xml.Serialization.XmlElementAttribute("GetMediaPropertiesResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetMediaPropertiesResponse
            Dim results() As Object = Me.Invoke("GetMediaProperties", New Object() {GetMediaPropertiesRequest})
            Return CType(results(0),GetMediaPropertiesResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMediaPropertiesAsync(ByVal GetMediaPropertiesRequest As GetMediaPropertiesRequest)
            Me.GetMediaPropertiesAsync(GetMediaPropertiesRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMediaPropertiesAsync(ByVal GetMediaPropertiesRequest As GetMediaPropertiesRequest, ByVal userState As Object)
            If (Me.GetMediaPropertiesOperationCompleted Is Nothing) Then
                Me.GetMediaPropertiesOperationCompleted = AddressOf Me.OnGetMediaPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetMediaProperties", New Object() {GetMediaPropertiesRequest}, Me.GetMediaPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMediaPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMediaPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMediaPropertiesCompleted(Me, New GetMediaPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetSystemPrope"& _ 
            "rties", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetSystemProperties(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetSystemPropertiesRequest As GetSystemPropertiesRequest) As <System.Xml.Serialization.XmlElementAttribute("GetSystemPropertiesResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetSystemPropertiesResponse
            Dim results() As Object = Me.Invoke("GetSystemProperties", New Object() {GetSystemPropertiesRequest})
            Return CType(results(0),GetSystemPropertiesResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemPropertiesAsync(ByVal GetSystemPropertiesRequest As GetSystemPropertiesRequest)
            Me.GetSystemPropertiesAsync(GetSystemPropertiesRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemPropertiesAsync(ByVal GetSystemPropertiesRequest As GetSystemPropertiesRequest, ByVal userState As Object)
            If (Me.GetSystemPropertiesOperationCompleted Is Nothing) Then
                Me.GetSystemPropertiesOperationCompleted = AddressOf Me.OnGetSystemPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetSystemProperties", New Object() {GetSystemPropertiesRequest}, Me.GetSystemPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemPropertiesCompleted(Me, New GetSystemPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetSystemStatu"& _ 
            "s", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetSystemStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetSystemStatusRequest As GetSystemStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetSystemStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetSystemStatusResponse
            Dim results() As Object = Me.Invoke("GetSystemStatus", New Object() {GetSystemStatusRequest})
            Return CType(results(0),GetSystemStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemStatusAsync(ByVal GetSystemStatusRequest As GetSystemStatusRequest)
            Me.GetSystemStatusAsync(GetSystemStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemStatusAsync(ByVal GetSystemStatusRequest As GetSystemStatusRequest, ByVal userState As Object)
            If (Me.GetSystemStatusOperationCompleted Is Nothing) Then
                Me.GetSystemStatusOperationCompleted = AddressOf Me.OnGetSystemStatusOperationCompleted
            End If
            Me.InvokeAsync("GetSystemStatus", New Object() {GetSystemStatusRequest}, Me.GetSystemStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemStatusCompleted(Me, New GetSystemStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetSystemError"& _ 
            "Warning", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetSystemErrorWarning(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetSystemErrorWarningRequest As GetSystemErrorWarningRequest) As <System.Xml.Serialization.XmlElementAttribute("GetSystemErrorWarningResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetSystemErrorWarningResponse
            Dim results() As Object = Me.Invoke("GetSystemErrorWarning", New Object() {GetSystemErrorWarningRequest})
            Return CType(results(0),GetSystemErrorWarningResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemErrorWarningAsync(ByVal GetSystemErrorWarningRequest As GetSystemErrorWarningRequest)
            Me.GetSystemErrorWarningAsync(GetSystemErrorWarningRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemErrorWarningAsync(ByVal GetSystemErrorWarningRequest As GetSystemErrorWarningRequest, ByVal userState As Object)
            If (Me.GetSystemErrorWarningOperationCompleted Is Nothing) Then
                Me.GetSystemErrorWarningOperationCompleted = AddressOf Me.OnGetSystemErrorWarningOperationCompleted
            End If
            Me.InvokeAsync("GetSystemErrorWarning", New Object() {GetSystemErrorWarningRequest}, Me.GetSystemErrorWarningOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemErrorWarningOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemErrorWarningCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemErrorWarningCompleted(Me, New GetSystemErrorWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AbortShutdown", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function Shutdown(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal ShutdownRequest As ShutdownRequest) As <System.Xml.Serialization.XmlElementAttribute("ShutdownResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ShutdownResponse
            Dim results() As Object = Me.Invoke("Shutdown", New Object() {ShutdownRequest})
            Return CType(results(0),ShutdownResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ShutdownAsync(ByVal ShutdownRequest As ShutdownRequest)
            Me.ShutdownAsync(ShutdownRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ShutdownAsync(ByVal ShutdownRequest As ShutdownRequest, ByVal userState As Object)
            If (Me.ShutdownOperationCompleted Is Nothing) Then
                Me.ShutdownOperationCompleted = AddressOf Me.OnShutdownOperationCompleted
            End If
            Me.InvokeAsync("Shutdown", New Object() {ShutdownRequest}, Me.ShutdownOperationCompleted, userState)
        End Sub
        
        Private Sub OnShutdownOperationCompleted(ByVal arg As Object)
            If (Not (Me.ShutdownCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ShutdownCompleted(Me, New ShutdownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AbortProcess", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function AbortProcess(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal AbortProcessRequest As AbortProcessRequest) As <System.Xml.Serialization.XmlElementAttribute("AbortProcessResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> AbortProcessResponse
            Dim results() As Object = Me.Invoke("AbortProcess", New Object() {AbortProcessRequest})
            Return CType(results(0),AbortProcessResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AbortProcessAsync(ByVal AbortProcessRequest As AbortProcessRequest)
            Me.AbortProcessAsync(AbortProcessRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbortProcessAsync(ByVal AbortProcessRequest As AbortProcessRequest, ByVal userState As Object)
            If (Me.AbortProcessOperationCompleted Is Nothing) Then
                Me.AbortProcessOperationCompleted = AddressOf Me.OnAbortProcessOperationCompleted
            End If
            Me.InvokeAsync("AbortProcess", New Object() {AbortProcessRequest}, Me.AbortProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnAbortProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.AbortProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AbortProcessCompleted(Me, New AbortProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetSystemEvent"& _ 
            "SessionId", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetSystemEventSessionId(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetSystemEventSessionIdRequest As GetSystemEventSessionIdRequest) As <System.Xml.Serialization.XmlElementAttribute("GetSystemEventSessionIdResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetSystemEventSessionIdResponse
            Dim results() As Object = Me.Invoke("GetSystemEventSessionId", New Object() {GetSystemEventSessionIdRequest})
            Return CType(results(0),GetSystemEventSessionIdResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemEventSessionIdAsync(ByVal GetSystemEventSessionIdRequest As GetSystemEventSessionIdRequest)
            Me.GetSystemEventSessionIdAsync(GetSystemEventSessionIdRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemEventSessionIdAsync(ByVal GetSystemEventSessionIdRequest As GetSystemEventSessionIdRequest, ByVal userState As Object)
            If (Me.GetSystemEventSessionIdOperationCompleted Is Nothing) Then
                Me.GetSystemEventSessionIdOperationCompleted = AddressOf Me.OnGetSystemEventSessionIdOperationCompleted
            End If
            Me.InvokeAsync("GetSystemEventSessionId", New Object() {GetSystemEventSessionIdRequest}, Me.GetSystemEventSessionIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemEventSessionIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemEventSessionIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemEventSessionIdCompleted(Me, New GetSystemEventSessionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetSystemEvent"& _ 
            "", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetSystemEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetSystemEventRequest As GetSystemEventRequest) As <System.Xml.Serialization.XmlArrayAttribute("GetSystemEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation"), System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable:=false)> SystemEvent()
            Dim results() As Object = Me.Invoke("GetSystemEvent", New Object() {GetSystemEventRequest})
            Return CType(results(0),SystemEvent())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemEventAsync(ByVal GetSystemEventRequest As GetSystemEventRequest)
            Me.GetSystemEventAsync(GetSystemEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemEventAsync(ByVal GetSystemEventRequest As GetSystemEventRequest, ByVal userState As Object)
            If (Me.GetSystemEventOperationCompleted Is Nothing) Then
                Me.GetSystemEventOperationCompleted = AddressOf Me.OnGetSystemEventOperationCompleted
            End If
            Me.InvokeAsync("GetSystemEvent", New Object() {GetSystemEventRequest}, Me.GetSystemEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemEventCompleted(Me, New GetSystemEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AddEssenceMark"& _ 
            "", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function AddEssenceMark(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal AddEssenceMarkRequest As AddEssenceMarkRequest) As <System.Xml.Serialization.XmlElementAttribute("AddEssenceMarkResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> AddEssenceMarkResponse
            Dim results() As Object = Me.Invoke("AddEssenceMark", New Object() {AddEssenceMarkRequest})
            Return CType(results(0),AddEssenceMarkResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddEssenceMarkAsync(ByVal AddEssenceMarkRequest As AddEssenceMarkRequest)
            Me.AddEssenceMarkAsync(AddEssenceMarkRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddEssenceMarkAsync(ByVal AddEssenceMarkRequest As AddEssenceMarkRequest, ByVal userState As Object)
            If (Me.AddEssenceMarkOperationCompleted Is Nothing) Then
                Me.AddEssenceMarkOperationCompleted = AddressOf Me.OnAddEssenceMarkOperationCompleted
            End If
            Me.InvokeAsync("AddEssenceMark", New Object() {AddEssenceMarkRequest}, Me.AddEssenceMarkOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddEssenceMarkOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddEssenceMarkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddEssenceMarkCompleted(Me, New AddEssenceMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeleteEssenceM"& _ 
            "ark", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeleteEssenceMark(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeleteEssenceMarkRequest As DeleteEssenceMarkRequest) As <System.Xml.Serialization.XmlElementAttribute("DeleteEssenceMarkResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeleteEssenceMarkResponse
            Dim results() As Object = Me.Invoke("DeleteEssenceMark", New Object() {DeleteEssenceMarkRequest})
            Return CType(results(0),DeleteEssenceMarkResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteEssenceMarkAsync(ByVal DeleteEssenceMarkRequest As DeleteEssenceMarkRequest)
            Me.DeleteEssenceMarkAsync(DeleteEssenceMarkRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteEssenceMarkAsync(ByVal DeleteEssenceMarkRequest As DeleteEssenceMarkRequest, ByVal userState As Object)
            If (Me.DeleteEssenceMarkOperationCompleted Is Nothing) Then
                Me.DeleteEssenceMarkOperationCompleted = AddressOf Me.OnDeleteEssenceMarkOperationCompleted
            End If
            Me.InvokeAsync("DeleteEssenceMark", New Object() {DeleteEssenceMarkRequest}, Me.DeleteEssenceMarkOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteEssenceMarkOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteEssenceMarkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteEssenceMarkCompleted(Me, New DeleteEssenceMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetPlayerTimeL"& _ 
            "ine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetPlayerTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetPlayerTimeLineRequest As SetPlayerTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("SetPlayerTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetPlayerTimeLineResponse
            Dim results() As Object = Me.Invoke("SetPlayerTimeLine", New Object() {SetPlayerTimeLineRequest})
            Return CType(results(0),SetPlayerTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPlayerTimeLineAsync(ByVal SetPlayerTimeLineRequest As SetPlayerTimeLineRequest)
            Me.SetPlayerTimeLineAsync(SetPlayerTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPlayerTimeLineAsync(ByVal SetPlayerTimeLineRequest As SetPlayerTimeLineRequest, ByVal userState As Object)
            If (Me.SetPlayerTimeLineOperationCompleted Is Nothing) Then
                Me.SetPlayerTimeLineOperationCompleted = AddressOf Me.OnSetPlayerTimeLineOperationCompleted
            End If
            Me.InvokeAsync("SetPlayerTimeLine", New Object() {SetPlayerTimeLineRequest}, Me.SetPlayerTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPlayerTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPlayerTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPlayerTimeLineCompleted(Me, New SetPlayerTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetPlayerTimeL"& _ 
            "ineStatus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetPlayerTimeLineStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetPlayerTimeLineStatusRequest As GetPlayerTimeLineStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetPlayerTimeLineStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetPlayerTimeLineStatusResponse
            Dim results() As Object = Me.Invoke("GetPlayerTimeLineStatus", New Object() {GetPlayerTimeLineStatusRequest})
            Return CType(results(0),GetPlayerTimeLineStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlayerTimeLineStatusAsync(ByVal GetPlayerTimeLineStatusRequest As GetPlayerTimeLineStatusRequest)
            Me.GetPlayerTimeLineStatusAsync(GetPlayerTimeLineStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlayerTimeLineStatusAsync(ByVal GetPlayerTimeLineStatusRequest As GetPlayerTimeLineStatusRequest, ByVal userState As Object)
            If (Me.GetPlayerTimeLineStatusOperationCompleted Is Nothing) Then
                Me.GetPlayerTimeLineStatusOperationCompleted = AddressOf Me.OnGetPlayerTimeLineStatusOperationCompleted
            End If
            Me.InvokeAsync("GetPlayerTimeLineStatus", New Object() {GetPlayerTimeLineStatusRequest}, Me.GetPlayerTimeLineStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlayerTimeLineStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlayerTimeLineStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlayerTimeLineStatusCompleted(Me, New GetPlayerTimeLineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetPlayerTimeL"& _ 
            "ineStartTime", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetPlayerTimeLineStartTime(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetPlayerTimeLineStartTimeRequest As SetPlayerTimeLineStartTimeRequest) As <System.Xml.Serialization.XmlElementAttribute("SetPlayerTimeLineStartTimeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetPlayerTimeLineStartTimeResponse
            Dim results() As Object = Me.Invoke("SetPlayerTimeLineStartTime", New Object() {SetPlayerTimeLineStartTimeRequest})
            Return CType(results(0),SetPlayerTimeLineStartTimeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPlayerTimeLineStartTimeAsync(ByVal SetPlayerTimeLineStartTimeRequest As SetPlayerTimeLineStartTimeRequest)
            Me.SetPlayerTimeLineStartTimeAsync(SetPlayerTimeLineStartTimeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPlayerTimeLineStartTimeAsync(ByVal SetPlayerTimeLineStartTimeRequest As SetPlayerTimeLineStartTimeRequest, ByVal userState As Object)
            If (Me.SetPlayerTimeLineStartTimeOperationCompleted Is Nothing) Then
                Me.SetPlayerTimeLineStartTimeOperationCompleted = AddressOf Me.OnSetPlayerTimeLineStartTimeOperationCompleted
            End If
            Me.InvokeAsync("SetPlayerTimeLineStartTime", New Object() {SetPlayerTimeLineStartTimeRequest}, Me.SetPlayerTimeLineStartTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPlayerTimeLineStartTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPlayerTimeLineStartTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPlayerTimeLineStartTimeCompleted(Me, New SetPlayerTimeLineStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/StartPlayerTim"& _ 
            "eLine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function StartPlayerTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal StartPlayerTimeLineRequest As StartPlayerTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("StartPlayerTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> StartPlayerTimeLineResponse
            Dim results() As Object = Me.Invoke("StartPlayerTimeLine", New Object() {StartPlayerTimeLineRequest})
            Return CType(results(0),StartPlayerTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StartPlayerTimeLineAsync(ByVal StartPlayerTimeLineRequest As StartPlayerTimeLineRequest)
            Me.StartPlayerTimeLineAsync(StartPlayerTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StartPlayerTimeLineAsync(ByVal StartPlayerTimeLineRequest As StartPlayerTimeLineRequest, ByVal userState As Object)
            If (Me.StartPlayerTimeLineOperationCompleted Is Nothing) Then
                Me.StartPlayerTimeLineOperationCompleted = AddressOf Me.OnStartPlayerTimeLineOperationCompleted
            End If
            Me.InvokeAsync("StartPlayerTimeLine", New Object() {StartPlayerTimeLineRequest}, Me.StartPlayerTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnStartPlayerTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.StartPlayerTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StartPlayerTimeLineCompleted(Me, New StartPlayerTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/StopPlayerTime"& _ 
            "Line", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function StopPlayerTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal StopPlayerTimeLineRequest As StopPlayerTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("StopPlayerTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> StopPlayerTimeLineResponse
            Dim results() As Object = Me.Invoke("StopPlayerTimeLine", New Object() {StopPlayerTimeLineRequest})
            Return CType(results(0),StopPlayerTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StopPlayerTimeLineAsync(ByVal StopPlayerTimeLineRequest As StopPlayerTimeLineRequest)
            Me.StopPlayerTimeLineAsync(StopPlayerTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StopPlayerTimeLineAsync(ByVal StopPlayerTimeLineRequest As StopPlayerTimeLineRequest, ByVal userState As Object)
            If (Me.StopPlayerTimeLineOperationCompleted Is Nothing) Then
                Me.StopPlayerTimeLineOperationCompleted = AddressOf Me.OnStopPlayerTimeLineOperationCompleted
            End If
            Me.InvokeAsync("StopPlayerTimeLine", New Object() {StopPlayerTimeLineRequest}, Me.StopPlayerTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnStopPlayerTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.StopPlayerTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StopPlayerTimeLineCompleted(Me, New StopPlayerTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetPlayerTimeL"& _ 
            "ineEventStatus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetPlayerTimeLineEventStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetPlayerTimeLineEventStatusRequest As GetPlayerTimeLineEventStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetPlayerTimeLineEventStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetPlayerTimeLineEventStatusResponse
            Dim results() As Object = Me.Invoke("GetPlayerTimeLineEventStatus", New Object() {GetPlayerTimeLineEventStatusRequest})
            Return CType(results(0),GetPlayerTimeLineEventStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlayerTimeLineEventStatusAsync(ByVal GetPlayerTimeLineEventStatusRequest As GetPlayerTimeLineEventStatusRequest)
            Me.GetPlayerTimeLineEventStatusAsync(GetPlayerTimeLineEventStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlayerTimeLineEventStatusAsync(ByVal GetPlayerTimeLineEventStatusRequest As GetPlayerTimeLineEventStatusRequest, ByVal userState As Object)
            If (Me.GetPlayerTimeLineEventStatusOperationCompleted Is Nothing) Then
                Me.GetPlayerTimeLineEventStatusOperationCompleted = AddressOf Me.OnGetPlayerTimeLineEventStatusOperationCompleted
            End If
            Me.InvokeAsync("GetPlayerTimeLineEventStatus", New Object() {GetPlayerTimeLineEventStatusRequest}, Me.GetPlayerTimeLineEventStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlayerTimeLineEventStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlayerTimeLineEventStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlayerTimeLineEventStatusCompleted(Me, New GetPlayerTimeLineEventStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AddPlayerTimeL"& _ 
            "ineEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function AddPlayerTimeLineEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal AddPlayerTimeLineEventRequest As AddPlayerTimeLineEventRequest) As <System.Xml.Serialization.XmlElementAttribute("AddPlayerTimeLineEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> AddPlayerTimeLineEventResponse
            Dim results() As Object = Me.Invoke("AddPlayerTimeLineEvent", New Object() {AddPlayerTimeLineEventRequest})
            Return CType(results(0),AddPlayerTimeLineEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPlayerTimeLineEventAsync(ByVal AddPlayerTimeLineEventRequest As AddPlayerTimeLineEventRequest)
            Me.AddPlayerTimeLineEventAsync(AddPlayerTimeLineEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPlayerTimeLineEventAsync(ByVal AddPlayerTimeLineEventRequest As AddPlayerTimeLineEventRequest, ByVal userState As Object)
            If (Me.AddPlayerTimeLineEventOperationCompleted Is Nothing) Then
                Me.AddPlayerTimeLineEventOperationCompleted = AddressOf Me.OnAddPlayerTimeLineEventOperationCompleted
            End If
            Me.InvokeAsync("AddPlayerTimeLineEvent", New Object() {AddPlayerTimeLineEventRequest}, Me.AddPlayerTimeLineEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPlayerTimeLineEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPlayerTimeLineEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPlayerTimeLineEventCompleted(Me, New AddPlayerTimeLineEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeletePlayerTi"& _ 
            "meLineEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeletePlayerTimeLineEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeletePlayerTimeLineEventRequest As DeletePlayerTimeLineEventRequest) As <System.Xml.Serialization.XmlElementAttribute("DeletePlayerTimeLineEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeletePlayerTimeLineEventResponse
            Dim results() As Object = Me.Invoke("DeletePlayerTimeLineEvent", New Object() {DeletePlayerTimeLineEventRequest})
            Return CType(results(0),DeletePlayerTimeLineEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePlayerTimeLineEventAsync(ByVal DeletePlayerTimeLineEventRequest As DeletePlayerTimeLineEventRequest)
            Me.DeletePlayerTimeLineEventAsync(DeletePlayerTimeLineEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePlayerTimeLineEventAsync(ByVal DeletePlayerTimeLineEventRequest As DeletePlayerTimeLineEventRequest, ByVal userState As Object)
            If (Me.DeletePlayerTimeLineEventOperationCompleted Is Nothing) Then
                Me.DeletePlayerTimeLineEventOperationCompleted = AddressOf Me.OnDeletePlayerTimeLineEventOperationCompleted
            End If
            Me.InvokeAsync("DeletePlayerTimeLineEvent", New Object() {DeletePlayerTimeLineEventRequest}, Me.DeletePlayerTimeLineEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePlayerTimeLineEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePlayerTimeLineEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePlayerTimeLineEventCompleted(Me, New DeletePlayerTimeLineEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetRecorderTim"& _ 
            "eLine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetRecorderTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetRecorderTimeLineRequest As SetRecorderTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("SetRecorderTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetRecorderTimeLineResponse
            Dim results() As Object = Me.Invoke("SetRecorderTimeLine", New Object() {SetRecorderTimeLineRequest})
            Return CType(results(0),SetRecorderTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineAsync(ByVal SetRecorderTimeLineRequest As SetRecorderTimeLineRequest)
            Me.SetRecorderTimeLineAsync(SetRecorderTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineAsync(ByVal SetRecorderTimeLineRequest As SetRecorderTimeLineRequest, ByVal userState As Object)
            If (Me.SetRecorderTimeLineOperationCompleted Is Nothing) Then
                Me.SetRecorderTimeLineOperationCompleted = AddressOf Me.OnSetRecorderTimeLineOperationCompleted
            End If
            Me.InvokeAsync("SetRecorderTimeLine", New Object() {SetRecorderTimeLineRequest}, Me.SetRecorderTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRecorderTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRecorderTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRecorderTimeLineCompleted(Me, New SetRecorderTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetRecorderTim"& _ 
            "eLineStatus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetRecorderTimeLineStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetRecorderTimeLineStatusRequest As GetRecorderTimeLineStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetRecorderTimeLineStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetRecorderTimeLineStatusResponse
            Dim results() As Object = Me.Invoke("GetRecorderTimeLineStatus", New Object() {GetRecorderTimeLineStatusRequest})
            Return CType(results(0),GetRecorderTimeLineStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecorderTimeLineStatusAsync(ByVal GetRecorderTimeLineStatusRequest As GetRecorderTimeLineStatusRequest)
            Me.GetRecorderTimeLineStatusAsync(GetRecorderTimeLineStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecorderTimeLineStatusAsync(ByVal GetRecorderTimeLineStatusRequest As GetRecorderTimeLineStatusRequest, ByVal userState As Object)
            If (Me.GetRecorderTimeLineStatusOperationCompleted Is Nothing) Then
                Me.GetRecorderTimeLineStatusOperationCompleted = AddressOf Me.OnGetRecorderTimeLineStatusOperationCompleted
            End If
            Me.InvokeAsync("GetRecorderTimeLineStatus", New Object() {GetRecorderTimeLineStatusRequest}, Me.GetRecorderTimeLineStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecorderTimeLineStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecorderTimeLineStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecorderTimeLineStatusCompleted(Me, New GetRecorderTimeLineStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetRecorderTim"& _ 
            "eLineStartTime", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetRecorderTimeLineStartTime(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetRecorderTimeLineStartTimeRequest As SetRecorderTimeLineStartTimeRequest) As <System.Xml.Serialization.XmlElementAttribute("SetRecorderTimeLineStartTimeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetRecorderTimeLineStartTimeResponse
            Dim results() As Object = Me.Invoke("SetRecorderTimeLineStartTime", New Object() {SetRecorderTimeLineStartTimeRequest})
            Return CType(results(0),SetRecorderTimeLineStartTimeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineStartTimeAsync(ByVal SetRecorderTimeLineStartTimeRequest As SetRecorderTimeLineStartTimeRequest)
            Me.SetRecorderTimeLineStartTimeAsync(SetRecorderTimeLineStartTimeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineStartTimeAsync(ByVal SetRecorderTimeLineStartTimeRequest As SetRecorderTimeLineStartTimeRequest, ByVal userState As Object)
            If (Me.SetRecorderTimeLineStartTimeOperationCompleted Is Nothing) Then
                Me.SetRecorderTimeLineStartTimeOperationCompleted = AddressOf Me.OnSetRecorderTimeLineStartTimeOperationCompleted
            End If
            Me.InvokeAsync("SetRecorderTimeLineStartTime", New Object() {SetRecorderTimeLineStartTimeRequest}, Me.SetRecorderTimeLineStartTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRecorderTimeLineStartTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRecorderTimeLineStartTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRecorderTimeLineStartTimeCompleted(Me, New SetRecorderTimeLineStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/StartRecorderT"& _ 
            "imeLine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function StartRecorderTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal StartRecorderTimeLineRequest As StartRecorderTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("StartRecorderTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> StartRecorderTimeLineResponse
            Dim results() As Object = Me.Invoke("StartRecorderTimeLine", New Object() {StartRecorderTimeLineRequest})
            Return CType(results(0),StartRecorderTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StartRecorderTimeLineAsync(ByVal StartRecorderTimeLineRequest As StartRecorderTimeLineRequest)
            Me.StartRecorderTimeLineAsync(StartRecorderTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StartRecorderTimeLineAsync(ByVal StartRecorderTimeLineRequest As StartRecorderTimeLineRequest, ByVal userState As Object)
            If (Me.StartRecorderTimeLineOperationCompleted Is Nothing) Then
                Me.StartRecorderTimeLineOperationCompleted = AddressOf Me.OnStartRecorderTimeLineOperationCompleted
            End If
            Me.InvokeAsync("StartRecorderTimeLine", New Object() {StartRecorderTimeLineRequest}, Me.StartRecorderTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnStartRecorderTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.StartRecorderTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StartRecorderTimeLineCompleted(Me, New StartRecorderTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/StopRecorderTi"& _ 
            "meLine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function StopRecorderTimeLine(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal StopRecorderTimeLineRequest As StopRecorderTimeLineRequest) As <System.Xml.Serialization.XmlElementAttribute("StopRecorderTimeLineResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> StopRecorderTimeLineResponse
            Dim results() As Object = Me.Invoke("StopRecorderTimeLine", New Object() {StopRecorderTimeLineRequest})
            Return CType(results(0),StopRecorderTimeLineResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StopRecorderTimeLineAsync(ByVal StopRecorderTimeLineRequest As StopRecorderTimeLineRequest)
            Me.StopRecorderTimeLineAsync(StopRecorderTimeLineRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StopRecorderTimeLineAsync(ByVal StopRecorderTimeLineRequest As StopRecorderTimeLineRequest, ByVal userState As Object)
            If (Me.StopRecorderTimeLineOperationCompleted Is Nothing) Then
                Me.StopRecorderTimeLineOperationCompleted = AddressOf Me.OnStopRecorderTimeLineOperationCompleted
            End If
            Me.InvokeAsync("StopRecorderTimeLine", New Object() {StopRecorderTimeLineRequest}, Me.StopRecorderTimeLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnStopRecorderTimeLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.StopRecorderTimeLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StopRecorderTimeLineCompleted(Me, New StopRecorderTimeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/GetRecorderTim"& _ 
            "eLineEventStatus", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function GetRecorderTimeLineEventStatus(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal GetRecorderTimeLineEventStatusRequest As GetRecorderTimeLineEventStatusRequest) As <System.Xml.Serialization.XmlElementAttribute("GetRecorderTimeLineEventStatusResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> GetRecorderTimeLineEventStatusResponse
            Dim results() As Object = Me.Invoke("GetRecorderTimeLineEventStatus", New Object() {GetRecorderTimeLineEventStatusRequest})
            Return CType(results(0),GetRecorderTimeLineEventStatusResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecorderTimeLineEventStatusAsync(ByVal GetRecorderTimeLineEventStatusRequest As GetRecorderTimeLineEventStatusRequest)
            Me.GetRecorderTimeLineEventStatusAsync(GetRecorderTimeLineEventStatusRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecorderTimeLineEventStatusAsync(ByVal GetRecorderTimeLineEventStatusRequest As GetRecorderTimeLineEventStatusRequest, ByVal userState As Object)
            If (Me.GetRecorderTimeLineEventStatusOperationCompleted Is Nothing) Then
                Me.GetRecorderTimeLineEventStatusOperationCompleted = AddressOf Me.OnGetRecorderTimeLineEventStatusOperationCompleted
            End If
            Me.InvokeAsync("GetRecorderTimeLineEventStatus", New Object() {GetRecorderTimeLineEventStatusRequest}, Me.GetRecorderTimeLineEventStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecorderTimeLineEventStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecorderTimeLineEventStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecorderTimeLineEventStatusCompleted(Me, New GetRecorderTimeLineEventStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AddRecorderTim"& _ 
            "eLineEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function AddRecorderTimeLineEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal AddRecorderTimeLineEventRequest As AddRecorderTimeLineEventRequest) As <System.Xml.Serialization.XmlElementAttribute("AddRecorderTimeLineEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> AddRecorderTimeLineEventResponse
            Dim results() As Object = Me.Invoke("AddRecorderTimeLineEvent", New Object() {AddRecorderTimeLineEventRequest})
            Return CType(results(0),AddRecorderTimeLineEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddRecorderTimeLineEventAsync(ByVal AddRecorderTimeLineEventRequest As AddRecorderTimeLineEventRequest)
            Me.AddRecorderTimeLineEventAsync(AddRecorderTimeLineEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddRecorderTimeLineEventAsync(ByVal AddRecorderTimeLineEventRequest As AddRecorderTimeLineEventRequest, ByVal userState As Object)
            If (Me.AddRecorderTimeLineEventOperationCompleted Is Nothing) Then
                Me.AddRecorderTimeLineEventOperationCompleted = AddressOf Me.OnAddRecorderTimeLineEventOperationCompleted
            End If
            Me.InvokeAsync("AddRecorderTimeLineEvent", New Object() {AddRecorderTimeLineEventRequest}, Me.AddRecorderTimeLineEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddRecorderTimeLineEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddRecorderTimeLineEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddRecorderTimeLineEventCompleted(Me, New AddRecorderTimeLineEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeleteRecorder"& _ 
            "TimeLineEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeleteRecorderTimeLineEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeleteRecorderTimeLineEventRequest As DeleteRecorderTimeLineEventRequest) As <System.Xml.Serialization.XmlElementAttribute("DeleteRecorderTimeLineEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeleteRecorderTimeLineEventResponse
            Dim results() As Object = Me.Invoke("DeleteRecorderTimeLineEvent", New Object() {DeleteRecorderTimeLineEventRequest})
            Return CType(results(0),DeleteRecorderTimeLineEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteRecorderTimeLineEventAsync(ByVal DeleteRecorderTimeLineEventRequest As DeleteRecorderTimeLineEventRequest)
            Me.DeleteRecorderTimeLineEventAsync(DeleteRecorderTimeLineEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRecorderTimeLineEventAsync(ByVal DeleteRecorderTimeLineEventRequest As DeleteRecorderTimeLineEventRequest, ByVal userState As Object)
            If (Me.DeleteRecorderTimeLineEventOperationCompleted Is Nothing) Then
                Me.DeleteRecorderTimeLineEventOperationCompleted = AddressOf Me.OnDeleteRecorderTimeLineEventOperationCompleted
            End If
            Me.InvokeAsync("DeleteRecorderTimeLineEvent", New Object() {DeleteRecorderTimeLineEventRequest}, Me.DeleteRecorderTimeLineEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRecorderTimeLineEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRecorderTimeLineEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRecorderTimeLineEventCompleted(Me, New DeleteRecorderTimeLineEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/SetRecorderTim"& _ 
            "eLineTimeCodeGenerator", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetRecorderTimeLineTimeCodeGeneratorMode(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetRecorderTimeLineTimeCodeGeneratorModeRequest As SetRecorderTimeLineTimeCodeGeneratorModeRequest) As <System.Xml.Serialization.XmlElementAttribute("SetRecorderTimeLineTimeCodeGeneratorModeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetRecorderTimeLineTimeCodeGeneratorModeResponse
            Dim results() As Object = Me.Invoke("SetRecorderTimeLineTimeCodeGeneratorMode", New Object() {SetRecorderTimeLineTimeCodeGeneratorModeRequest})
            Return CType(results(0),SetRecorderTimeLineTimeCodeGeneratorModeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineTimeCodeGeneratorModeAsync(ByVal SetRecorderTimeLineTimeCodeGeneratorModeRequest As SetRecorderTimeLineTimeCodeGeneratorModeRequest)
            Me.SetRecorderTimeLineTimeCodeGeneratorModeAsync(SetRecorderTimeLineTimeCodeGeneratorModeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineTimeCodeGeneratorModeAsync(ByVal SetRecorderTimeLineTimeCodeGeneratorModeRequest As SetRecorderTimeLineTimeCodeGeneratorModeRequest, ByVal userState As Object)
            If (Me.SetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted Is Nothing) Then
                Me.SetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted = AddressOf Me.OnSetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted
            End If
            Me.InvokeAsync("SetRecorderTimeLineTimeCodeGeneratorMode", New Object() {SetRecorderTimeLineTimeCodeGeneratorModeRequest}, Me.SetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRecorderTimeLineTimeCodeGeneratorModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRecorderTimeLineTimeCodeGeneratorModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRecorderTimeLineTimeCodeGeneratorModeCompleted(Me, New SetRecorderTimeLineTimeCodeGeneratorModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:#NewOperation", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function SetRecorderTimeLineTimeCodeGeneratorStartTime(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest As SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest) As <System.Xml.Serialization.XmlElementAttribute("SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse
            Dim results() As Object = Me.Invoke("SetRecorderTimeLineTimeCodeGeneratorStartTime", New Object() {SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest})
            Return CType(results(0),SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineTimeCodeGeneratorStartTimeAsync(ByVal SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest As SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest)
            Me.SetRecorderTimeLineTimeCodeGeneratorStartTimeAsync(SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRecorderTimeLineTimeCodeGeneratorStartTimeAsync(ByVal SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest As SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest, ByVal userState As Object)
            If (Me.SetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted Is Nothing) Then
                Me.SetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted = AddressOf Me.OnSetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted
            End If
            Me.InvokeAsync("SetRecorderTimeLineTimeCodeGeneratorStartTime", New Object() {SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest}, Me.SetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRecorderTimeLineTimeCodeGeneratorStartTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRecorderTimeLineTimeCodeGeneratorStartTimeCompleted(Me, New SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeletePlayerTi"& _ 
            "meLineAllEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeletePlayerTimeLineAllEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeletePlayerTimeLineAllEventRequest As DeletePlayerTimeLineAllEventRequest) As <System.Xml.Serialization.XmlElementAttribute("DeletePlayerTimeLineAllEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeletePlayerTimeLineAllEventResponse
            Dim results() As Object = Me.Invoke("DeletePlayerTimeLineAllEvent", New Object() {DeletePlayerTimeLineAllEventRequest})
            Return CType(results(0),DeletePlayerTimeLineAllEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePlayerTimeLineAllEventAsync(ByVal DeletePlayerTimeLineAllEventRequest As DeletePlayerTimeLineAllEventRequest)
            Me.DeletePlayerTimeLineAllEventAsync(DeletePlayerTimeLineAllEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePlayerTimeLineAllEventAsync(ByVal DeletePlayerTimeLineAllEventRequest As DeletePlayerTimeLineAllEventRequest, ByVal userState As Object)
            If (Me.DeletePlayerTimeLineAllEventOperationCompleted Is Nothing) Then
                Me.DeletePlayerTimeLineAllEventOperationCompleted = AddressOf Me.OnDeletePlayerTimeLineAllEventOperationCompleted
            End If
            Me.InvokeAsync("DeletePlayerTimeLineAllEvent", New Object() {DeletePlayerTimeLineAllEventRequest}, Me.DeletePlayerTimeLineAllEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePlayerTimeLineAllEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePlayerTimeLineAllEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePlayerTimeLineAllEventCompleted(Me, New DeletePlayerTimeLineAllEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/DeleteRecorder"& _ 
            "TimeLineAllEvent", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function DeleteRecorderTimeLineAllEvent(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal DeleteRecorderTimeLineAllEventRequest As DeleteRecorderTimeLineAllEventRequest) As <System.Xml.Serialization.XmlElementAttribute("DeleteRecorderTimeLineAllEventResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> DeleteRecorderTimeLineAllEventResponse
            Dim results() As Object = Me.Invoke("DeleteRecorderTimeLineAllEvent", New Object() {DeleteRecorderTimeLineAllEventRequest})
            Return CType(results(0),DeleteRecorderTimeLineAllEventResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteRecorderTimeLineAllEventAsync(ByVal DeleteRecorderTimeLineAllEventRequest As DeleteRecorderTimeLineAllEventRequest)
            Me.DeleteRecorderTimeLineAllEventAsync(DeleteRecorderTimeLineAllEventRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRecorderTimeLineAllEventAsync(ByVal DeleteRecorderTimeLineAllEventRequest As DeleteRecorderTimeLineAllEventRequest, ByVal userState As Object)
            If (Me.DeleteRecorderTimeLineAllEventOperationCompleted Is Nothing) Then
                Me.DeleteRecorderTimeLineAllEventOperationCompleted = AddressOf Me.OnDeleteRecorderTimeLineAllEventOperationCompleted
            End If
            Me.InvokeAsync("DeleteRecorderTimeLineAllEvent", New Object() {DeleteRecorderTimeLineAllEventRequest}, Me.DeleteRecorderTimeLineAllEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRecorderTimeLineAllEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRecorderTimeLineAllEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRecorderTimeLineAllEventCompleted(Me, New DeleteRecorderTimeLineAllEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation/AddEssenceMark"& _ 
            "ToUnnamedRecordingClip", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>  _
        Public Function AddEssenceMarkToUnnamedRecordingClip(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> ByVal AddEssenceMarkToUnnamedRecordingClipRequest As AddEssenceMarkToUnnamedRecordingClipRequest) As <System.Xml.Serialization.XmlElementAttribute("AddEssenceMarkToUnnamedRecordingClipResponse", [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")> AddEssenceMarkToUnnamedRecordingClipResponse
            Dim results() As Object = Me.Invoke("AddEssenceMarkToUnnamedRecordingClip", New Object() {AddEssenceMarkToUnnamedRecordingClipRequest})
            Return CType(results(0),AddEssenceMarkToUnnamedRecordingClipResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddEssenceMarkToUnnamedRecordingClipAsync(ByVal AddEssenceMarkToUnnamedRecordingClipRequest As AddEssenceMarkToUnnamedRecordingClipRequest)
            Me.AddEssenceMarkToUnnamedRecordingClipAsync(AddEssenceMarkToUnnamedRecordingClipRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddEssenceMarkToUnnamedRecordingClipAsync(ByVal AddEssenceMarkToUnnamedRecordingClipRequest As AddEssenceMarkToUnnamedRecordingClipRequest, ByVal userState As Object)
            If (Me.AddEssenceMarkToUnnamedRecordingClipOperationCompleted Is Nothing) Then
                Me.AddEssenceMarkToUnnamedRecordingClipOperationCompleted = AddressOf Me.OnAddEssenceMarkToUnnamedRecordingClipOperationCompleted
            End If
            Me.InvokeAsync("AddEssenceMarkToUnnamedRecordingClip", New Object() {AddEssenceMarkToUnnamedRecordingClipRequest}, Me.AddEssenceMarkToUnnamedRecordingClipOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddEssenceMarkToUnnamedRecordingClipOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddEssenceMarkToUnnamedRecordingClipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddEssenceMarkToUnnamedRecordingClipCompleted(Me, New AddEssenceMarkToUnnamedRecordingClipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class OpenPlayerRequest
        
        Private playerIdField As String
        
        Private playerModeField As OpenPlayerMode
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private offsetField As UInteger
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PlayerMode() As OpenPlayerMode
            Get
                Return Me.playerModeField
            End Get
            Set
                Me.playerModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum OpenPlayerMode
        
        '''<remarks/>
        Play
        
        '''<remarks/>
        Still
        
        '''<remarks/>
        Repeat
        
        '''<remarks/>
        Key
        
        '''<remarks/>
        TapeLikePlay
        
        '''<remarks/>
        TapeLikeStill
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RecordEvent
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private framesField As UInteger
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frames() As UInteger
            Get
                Return Me.framesField
            End Get
            Set
                Me.framesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RecorderTimeLineEvent
        
        Private itemField As Object
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Idle", GetType(NonParamEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("Record", GetType(RecordEvent))>  _
        Public Property Item() As Object
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class NonParamEvent
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PlayEvent
        
        Private modeField As PlayMode
        
        '''<remarks/>
        Public Property Mode() As PlayMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PlayMode
        
        '''<remarks/>
        Play
        
        '''<remarks/>
        Repeat
        
        '''<remarks/>
        Key
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CueAndPlayEvent
        
        Private targetField As PlayTarget
        
        Private cueUpPositionField As UInteger
        
        Private modeField As OpenPlayerMode
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        '''<remarks/>
        Public Property Target() As PlayTarget
            Get
                Return Me.targetField
            End Get
            Set
                Me.targetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CueUpPosition() As UInteger
            Get
                Return Me.cueUpPositionField
            End Get
            Set
                Me.cueUpPositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As OpenPlayerMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PlayTarget
        
        '''<remarks/>
        Foreground
        
        '''<remarks/>
        Background
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PlayerTimeLineEvent
        
        Private itemField As Object
        
        Private itemElementNameField As ItemChoiceType1
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("CueAndPlay", GetType(CueAndPlayEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("Idle", GetType(NonParamEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("Pause", GetType(NonParamEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("Play", GetType(PlayEvent)),  _
         System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")>  _
        Public Property Item() As Object
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ItemElementName() As ItemChoiceType1
            Get
                Return Me.itemElementNameField
            End Get
            Set
                Me.itemElementNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation", IncludeInSchema:=false)>  _
    Public Enum ItemChoiceType1
        
        '''<remarks/>
        CueAndPlay
        
        '''<remarks/>
        Idle
        
        '''<remarks/>
        Pause
        
        '''<remarks/>
        Play
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class TimeLineEventInfo
        
        Private startTimeField As TimeCode
        
        Private eventCompletedField As Boolean
        
        Private errorOccurredField As Boolean
        
        Private eventIdField As UInteger
        
        '''<remarks/>
        Public Property StartTime() As TimeCode
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventCompleted() As Boolean
            Get
                Return Me.eventCompletedField
            End Get
            Set
                Me.eventCompletedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorOccurred() As Boolean
            Get
                Return Me.errorOccurredField
            End Get
            Set
                Me.errorOccurredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property eventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class TimeCode
        
        Private timeField As Date
        
        Private frameField As UInteger
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="time")>  _
        Public Property Time() As Date
            Get
                Return Me.timeField
            End Get
            Set
                Me.timeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frame() As UInteger
            Get
                Return Me.frameField
            End Get
            Set
                Me.frameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class TimeLineStatus
        
        Private enabledField As Boolean
        
        Private maxEventNumbersField As UInteger
        
        Private stateField As TimeLineState
        
        Private startTimeField As TimeCode
        
        Private runningEventIdField As UInteger
        
        Private runningEventIdFieldSpecified As Boolean
        
        Private registeredEventListField() As TimeLineEventInfo
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxEventNumbers() As UInteger
            Get
                Return Me.maxEventNumbersField
            End Get
            Set
                Me.maxEventNumbersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As TimeLineState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartTime() As TimeCode
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RunningEventId() As UInteger
            Get
                Return Me.runningEventIdField
            End Get
            Set
                Me.runningEventIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property RunningEventIdSpecified() As Boolean
            Get
                Return Me.runningEventIdFieldSpecified
            End Get
            Set
                Me.runningEventIdFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("RegisteredEventList")>  _
        Public Property RegisteredEventList() As TimeLineEventInfo()
            Get
                Return Me.registeredEventListField
            End Get
            Set
                Me.registeredEventListField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeLineState
        
        '''<remarks/>
        Run
        
        '''<remarks/>
        [Stop]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RemainingTimeAlert
        
        Private reasonField As RemainingTimeAlertReason
        
        '''<remarks/>
        Public Property Reason() As RemainingTimeAlertReason
            Get
                Return Me.reasonField
            End Get
            Set
                Me.reasonField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum RemainingTimeAlertReason
        
        '''<remarks/>
        StorageLimitation
        
        '''<remarks/>
        ClipLimitation
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyFileResultCode
        
        Private itemField As Object
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Failure", GetType(SystemErrorCode)),  _
         System.Xml.Serialization.XmlElementAttribute("Success", GetType(CopyFileResultCodeSuccess))>  _
        Public Property Item() As Object
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum SystemErrorCode
        
        '''<remarks/>
        InternalError
        
        '''<remarks/>
        RequestTimeout
        
        '''<remarks/>
        InvalidIdentifier
        
        '''<remarks/>
        InvalidArgument
        
        '''<remarks/>
        DiskNotMounted
        
        '''<remarks/>
        DiskNearFull
        
        '''<remarks/>
        DiskFull
        
        '''<remarks/>
        MediaBusy
        
        '''<remarks/>
        MediaWriteInhibited
        
        '''<remarks/>
        MediaWriteProtected
        
        '''<remarks/>
        MediaInUse
        
        '''<remarks/>
        MediaRemoval
        
        '''<remarks/>
        UnsupportedMediaFormat
        
        '''<remarks/>
        FileWriteProtected
        
        '''<remarks/>
        FileInUse
        
        '''<remarks/>
        FileAlreadyExists
        
        '''<remarks/>
        FileNotFound
        
        '''<remarks/>
        FileLinkedByOthers
        
        '''<remarks/>
        FileSyntaxError
        
        '''<remarks/>
        ParseFileFailed
        
        '''<remarks/>
        MaximumOpenFilesLimitExceeded
        
        '''<remarks/>
        FilesNumberLimitExceeded
        
        '''<remarks/>
        SameUmidAlreadyExists
        
        '''<remarks/>
        UnsupportedFileFormat
        
        '''<remarks/>
        NotReadyToPlay
        
        '''<remarks/>
        IllegalEDL
        
        '''<remarks/>
        PortNotIdle
        
        '''<remarks/>
        PortNotActive
        
        '''<remarks/>
        CueNotDone
        
        '''<remarks/>
        MaximumOpenClipListsLimitExceeded
        
        '''<remarks/>
        CopyGetResourceFailed
        
        '''<remarks/>
        SessionNotFound
        
        '''<remarks/>
        MaximumSessionsLimitExceeded
        
        '''<remarks/>
        ProcessNotFound
        
        '''<remarks/>
        MaximumProcessesLimitExceeded
        
        '''<remarks/>
        ProcessAborted
        
        '''<remarks/>
        AbortProcessFailed
        
        '''<remarks/>
        OperationCancelled
        
        '''<remarks/>
        TimeLineEventNotEnoughOffset
        
        '''<remarks/>
        TimeLineEventAlreadyExists
        
        '''<remarks/>
        EssenceMarkAlreadyExists
        
        '''<remarks/>
        AddEssenceMarkFailed
        
        '''<remarks/>
        UnwritableAVFormat
        
        '''<remarks/>
        InvalidFileSystem
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyFileResultCodeSuccess
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyFileResultReportEvent
        
        Private processIdField As UInteger
        
        Private codeField As CopyFileResultCode
        
        Private srcEndFrameField As UInteger
        
        '''<remarks/>
        Public Property ProcessId() As UInteger
            Get
                Return Me.processIdField
            End Get
            Set
                Me.processIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As CopyFileResultCode
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcEndFrame() As UInteger
            Get
                Return Me.srcEndFrameField
            End Get
            Set
                Me.srcEndFrameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RecorderEvent
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DriveEvent
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class UMIDChangedEvent
        
        Private driveIdField As String
        
        Private fileNameField As String
        
        Private newUMIDField() As Byte
        
        Private oldUMIDField() As Byte
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property NewUMID() As Byte()
            Get
                Return Me.newUMIDField
            End Get
            Set
                Me.newUMIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property OldUMID() As Byte()
            Get
                Return Me.oldUMIDField
            End Get
            Set
                Me.oldUMIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FileWritingTerminatedEvent
        
        Private driveIdField As String
        
        Private propertyField As ClipInfo
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Property]() As ClipInfo
            Get
                Return Me.propertyField
            End Get
            Set
                Me.propertyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ClipInfo
        
        Private uMIDField() As Byte
        
        Private clipNameField As String
        
        Private protectedField As Boolean
        
        Private createDateTimeField As Date
        
        Private createDateTimeFieldSpecified As Boolean
        
        Private lastModifiedDateTimeField As Date
        
        Private lastModifiedDateTimeFieldSpecified As Boolean
        
        Private nrtModifiedDateTimeField As Date
        
        Private nrtModifiedDateTimeFieldSpecified As Boolean
        
        Private totalFramesField As UInteger
        
        Private thumbnailFrameField As UInteger
        
        Private thumbnailFrameFieldSpecified As Boolean
        
        Private klvPacketsField As UInteger
        
        Private klvPacketsFieldSpecified As Boolean
        
        Private startTimeCodeField As TimeCode
        
        Private timeCodeRateField As UInteger
        
        Private timeCodeRateFieldSpecified As Boolean
        
        Private videoCodecInfoField As VideoCodecInfo
        
        Private videoFrameRateField As VideoFrameRate
        
        Private audioCodecField As AudioCodec
        
        Private audioCodecFieldSpecified As Boolean
        
        Private audioChannelsField As UInteger
        
        Private shotMarkField As Boolean
        
        Private shotMarkFieldSpecified As Boolean
        
        Private readyToPlayField As Boolean
        
        Private inRecordingField As Boolean
        
        Private flagField As ClipFlag
        
        Private flagFieldSpecified As Boolean
        
        Private errorField() As ClipError
        
        Private inEditField As Boolean
        
        Private inEditFieldSpecified As Boolean
        
        Private proxyExistsField As Boolean
        
        Private proxyExistsFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property UMID() As Byte()
            Get
                Return Me.uMIDField
            End Get
            Set
                Me.uMIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Protected]() As Boolean
            Get
                Return Me.protectedField
            End Get
            Set
                Me.protectedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreateDateTime() As Date
            Get
                Return Me.createDateTimeField
            End Get
            Set
                Me.createDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property CreateDateTimeSpecified() As Boolean
            Get
                Return Me.createDateTimeFieldSpecified
            End Get
            Set
                Me.createDateTimeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModifiedDateTime() As Date
            Get
                Return Me.lastModifiedDateTimeField
            End Get
            Set
                Me.lastModifiedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property LastModifiedDateTimeSpecified() As Boolean
            Get
                Return Me.lastModifiedDateTimeFieldSpecified
            End Get
            Set
                Me.lastModifiedDateTimeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NrtModifiedDateTime() As Date
            Get
                Return Me.nrtModifiedDateTimeField
            End Get
            Set
                Me.nrtModifiedDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property NrtModifiedDateTimeSpecified() As Boolean
            Get
                Return Me.nrtModifiedDateTimeFieldSpecified
            End Get
            Set
                Me.nrtModifiedDateTimeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalFrames() As UInteger
            Get
                Return Me.totalFramesField
            End Get
            Set
                Me.totalFramesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ThumbnailFrame() As UInteger
            Get
                Return Me.thumbnailFrameField
            End Get
            Set
                Me.thumbnailFrameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ThumbnailFrameSpecified() As Boolean
            Get
                Return Me.thumbnailFrameFieldSpecified
            End Get
            Set
                Me.thumbnailFrameFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KlvPackets() As UInteger
            Get
                Return Me.klvPacketsField
            End Get
            Set
                Me.klvPacketsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property KlvPacketsSpecified() As Boolean
            Get
                Return Me.klvPacketsFieldSpecified
            End Get
            Set
                Me.klvPacketsFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartTimeCode() As TimeCode
            Get
                Return Me.startTimeCodeField
            End Get
            Set
                Me.startTimeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeCodeRate() As UInteger
            Get
                Return Me.timeCodeRateField
            End Get
            Set
                Me.timeCodeRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property TimeCodeRateSpecified() As Boolean
            Get
                Return Me.timeCodeRateFieldSpecified
            End Get
            Set
                Me.timeCodeRateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VideoCodecInfo() As VideoCodecInfo
            Get
                Return Me.videoCodecInfoField
            End Get
            Set
                Me.videoCodecInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VideoFrameRate() As VideoFrameRate
            Get
                Return Me.videoFrameRateField
            End Get
            Set
                Me.videoFrameRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AudioCodec() As AudioCodec
            Get
                Return Me.audioCodecField
            End Get
            Set
                Me.audioCodecField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property AudioCodecSpecified() As Boolean
            Get
                Return Me.audioCodecFieldSpecified
            End Get
            Set
                Me.audioCodecFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AudioChannels() As UInteger
            Get
                Return Me.audioChannelsField
            End Get
            Set
                Me.audioChannelsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShotMark() As Boolean
            Get
                Return Me.shotMarkField
            End Get
            Set
                Me.shotMarkField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ShotMarkSpecified() As Boolean
            Get
                Return Me.shotMarkFieldSpecified
            End Get
            Set
                Me.shotMarkFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReadyToPlay() As Boolean
            Get
                Return Me.readyToPlayField
            End Get
            Set
                Me.readyToPlayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InRecording() As Boolean
            Get
                Return Me.inRecordingField
            End Get
            Set
                Me.inRecordingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Flag() As ClipFlag
            Get
                Return Me.flagField
            End Get
            Set
                Me.flagField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FlagSpecified() As Boolean
            Get
                Return Me.flagFieldSpecified
            End Get
            Set
                Me.flagFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Error")>  _
        Public Property [Error]() As ClipError()
            Get
                Return Me.errorField
            End Get
            Set
                Me.errorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InEdit() As Boolean
            Get
                Return Me.inEditField
            End Get
            Set
                Me.inEditField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property InEditSpecified() As Boolean
            Get
                Return Me.inEditFieldSpecified
            End Get
            Set
                Me.inEditFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProxyExists() As Boolean
            Get
                Return Me.proxyExistsField
            End Get
            Set
                Me.proxyExistsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ProxyExistsSpecified() As Boolean
            Get
                Return Me.proxyExistsFieldSpecified
            End Get
            Set
                Me.proxyExistsFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum VideoCodecInfo
        
        '''<remarks/>
        None
        
        '''<remarks/>
        DV25_411
        
        '''<remarks/>
        DV25DATA_411
        
        '''<remarks/>
        DV25_420
        
        '''<remarks/>
        DV25DATA_420
        
        '''<remarks/>
        IMX30
        
        '''<remarks/>
        IMX40
        
        '''<remarks/>
        IMX50
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD25CBR_1440_1080_MP@H-14")>  _
        MPEG2HD25CBR_1440_1080_MPH14
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD12.5CBR_1440_540_MP@H-14")>  _
        MPEG2HD125CBR_1440_540_MPH14
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD17.5_1440_1080_MP@HL")>  _
        MPEG2HD175_1440_1080_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD25_1440_1080_MP@HL")>  _
        MPEG2HD25_1440_1080_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD35_1440_1080_MP@HL")>  _
        MPEG2HD35_1440_1080_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD8.75_1440_540_MP@HL")>  _
        MPEG2HD875_1440_540_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD12.5_1440_540_MP@HL")>  _
        MPEG2HD125_1440_540_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD17.5_1440_540_MP@HL")>  _
        MPEG2HD175_1440_540_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD50CBR_1920_1080_422P@HL")>  _
        MPEG2HD50CBR_1920_1080_422PHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD25CBR_1920_540_422P@HL")>  _
        MPEG2HD25CBR_1920_540_422PHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD50CBR_1280_720_422P@HL")>  _
        MPEG2HD50CBR_1280_720_422PHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD35_1280_720_MP@HL")>  _
        MPEG2HD35_1280_720_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD35_1920_1080_MP@HL")>  _
        MPEG2HD35_1920_1080_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD25_1280_720_MP@HL")>  _
        MPEG2HD25_1280_720_MPHL
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("MPEG2HD25CBR_1280_720_MP@HL")>  _
        MPEG2HD25CBR_1280_720_MPHL
        
        '''<remarks/>
        AVC50CBG_1440_1080_H10IPL4
        
        '''<remarks/>
        AVC100CBG_1920_1080_H422IPL41
        
        '''<remarks/>
        AVC100CBG_1280_720_H422IPL41
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum VideoFrameRate
        
        '''<remarks/>
        None
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("50i")>  _
        Item50i
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("59.94i")>  _
        Item5994i
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("23.98p")>  _
        Item2398p
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("50p")>  _
        Item50p
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("59.94p")>  _
        Item5994p
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("25p")>  _
        Item25p
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("29.97p")>  _
        Item2997p
        
        '''<remarks/>
        <System.Xml.Serialization.XmlEnumAttribute("24p")>  _
        Item24p
        
        '''<remarks/>
        VariableRecMode
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum AudioCodec
        
        '''<remarks/>
        None
        
        '''<remarks/>
        LinearPCM16
        
        '''<remarks/>
        LinearPCM24
        
        '''<remarks/>
        NonLinearPCM16
        
        '''<remarks/>
        NonLinearPCM24
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum ClipFlag
        
        '''<remarks/>
        None
        
        '''<remarks/>
        OK
        
        '''<remarks/>
        NG
        
        '''<remarks/>
        Keep
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum ClipError
        
        '''<remarks/>
        IllegalEDL
        
        '''<remarks/>
        IllegalNrtMeta
        
        '''<remarks/>
        IllegalFileFormat
        
        '''<remarks/>
        TemporarilyUnplayable
        
        '''<remarks/>
        TapelikeUnavailable
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FileRenamedEvent
        
        Private uMIDField() As Byte
        
        Private driveIdField As String
        
        Private newFileNameField As String
        
        Private oldFileNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property UMID() As Byte()
            Get
                Return Me.uMIDField
            End Get
            Set
                Me.uMIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewFileName() As String
            Get
                Return Me.newFileNameField
            End Get
            Set
                Me.newFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OldFileName() As String
            Get
                Return Me.oldFileNameField
            End Get
            Set
                Me.oldFileNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FileOperationEvent
        
        Private uMIDField() As Byte
        
        Private driveIdField As String
        
        Private fileNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property UMID() As Byte()
            Get
                Return Me.uMIDField
            End Get
            Set
                Me.uMIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class EventDataNone
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SystemEvent
        
        Private itemField As Object
        
        Private itemElementNameField As ItemChoiceType
        
        Private utcTimeField As Date
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("CopyFileResultReport", GetType(CopyFileResultReportEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("CopyFileStarted", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("CopyFileTerminated", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("EjectStarted", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("EjectTerminated", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("ErrorOccurred", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("FileCreated", GetType(FileOperationEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileDeleted", GetType(FileOperationEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileEditStarted", GetType(FileOperationEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileEditTerminated", GetType(FileOperationEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileRenamed", GetType(FileRenamedEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileUpdated", GetType(FileOperationEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FileWritingTerminated", GetType(FileWritingTerminatedEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FinalizeStarted", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FinalizeTerminated", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FormatStarted", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("FormatTerminated", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("InjectStarted", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("InjectTerminated", GetType(DriveEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("PlayerScopeChanged", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("RaidRebuildRequire", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("RecorderStarted", GetType(RecorderEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("RecorderTerminated", GetType(RecorderEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("RemainingTimeAlert", GetType(RemainingTimeAlert)),  _
         System.Xml.Serialization.XmlElementAttribute("RepowerRequire", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("TranscodeCopyFileResultReport", GetType(CopyFileResultReportEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("TranscodeCopyFileStarted", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("TranscodeCopyFileTerminated", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlElementAttribute("UMIDChanged", GetType(UMIDChangedEvent)),  _
         System.Xml.Serialization.XmlElementAttribute("WarningOccurred", GetType(EventDataNone)),  _
         System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")>  _
        Public Property Item() As Object
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ItemElementName() As ItemChoiceType
            Get
                Return Me.itemElementNameField
            End Get
            Set
                Me.itemElementNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property UtcTime() As Date
            Get
                Return Me.utcTimeField
            End Get
            Set
                Me.utcTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation", IncludeInSchema:=false)>  _
    Public Enum ItemChoiceType
        
        '''<remarks/>
        CopyFileResultReport
        
        '''<remarks/>
        CopyFileStarted
        
        '''<remarks/>
        CopyFileTerminated
        
        '''<remarks/>
        EjectStarted
        
        '''<remarks/>
        EjectTerminated
        
        '''<remarks/>
        ErrorOccurred
        
        '''<remarks/>
        FileCreated
        
        '''<remarks/>
        FileDeleted
        
        '''<remarks/>
        FileEditStarted
        
        '''<remarks/>
        FileEditTerminated
        
        '''<remarks/>
        FileRenamed
        
        '''<remarks/>
        FileUpdated
        
        '''<remarks/>
        FileWritingTerminated
        
        '''<remarks/>
        FinalizeStarted
        
        '''<remarks/>
        FinalizeTerminated
        
        '''<remarks/>
        FormatStarted
        
        '''<remarks/>
        FormatTerminated
        
        '''<remarks/>
        InjectStarted
        
        '''<remarks/>
        InjectTerminated
        
        '''<remarks/>
        PlayerScopeChanged
        
        '''<remarks/>
        RaidRebuildRequire
        
        '''<remarks/>
        RecorderStarted
        
        '''<remarks/>
        RecorderTerminated
        
        '''<remarks/>
        RemainingTimeAlert
        
        '''<remarks/>
        RepowerRequire
        
        '''<remarks/>
        TranscodeCopyFileResultReport
        
        '''<remarks/>
        TranscodeCopyFileStarted
        
        '''<remarks/>
        TranscodeCopyFileTerminated
        
        '''<remarks/>
        UMIDChanged
        
        '''<remarks/>
        WarningOccurred
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ErrorWarningStatusItem
        
        Private nameField As UnitItem
        
        Private valueField As ErrorStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As UnitItem
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlTextAttribute()>  _
        Public Property Value() As ErrorStatus
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum UnitItem
        
        '''<remarks/>
        PowerSupplyUnit_A
        
        '''<remarks/>
        PowerSupplyUnit_B
        
        '''<remarks/>
        Fan1
        
        '''<remarks/>
        Fan2
        
        '''<remarks/>
        HiTemp0
        
        '''<remarks/>
        HiTemp1
        
        '''<remarks/>
        LowTemp0
        
        '''<remarks/>
        LowTemp1
        
        '''<remarks/>
        CF_Smart
        
        '''<remarks/>
        PSC_Power
        
        '''<remarks/>
        Battery
        
        '''<remarks/>
        SxS_A
        
        '''<remarks/>
        SxS_B
        
        '''<remarks/>
        PD
        
        '''<remarks/>
        RefExisted
        
        '''<remarks/>
        RefLocked
        
        '''<remarks/>
        InputExisted
        
        '''<remarks/>
        InputLocked
        
        '''<remarks/>
        AudioEmphasis
        
        '''<remarks/>
        FPConnected
        
        '''<remarks/>
        FewDrive
        
        '''<remarks/>
        DriveMismatched
        
        '''<remarks/>
        HDD1
        
        '''<remarks/>
        HDD2
        
        '''<remarks/>
        HDD3
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum ErrorStatus
        
        '''<remarks/>
        Good
        
        '''<remarks/>
        Warning
        
        '''<remarks/>
        [Error]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ModuleExistItem
        
        Private nameField As ModuleItem
        
        Private valueField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As ModuleItem
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlTextAttribute()>  _
        Public Property Value() As Boolean
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum ModuleItem
        
        '''<remarks/>
        TS
        
        '''<remarks/>
        FP
        
        '''<remarks/>
        IO
        
        '''<remarks/>
        IT
        
        '''<remarks/>
        SxS_A
        
        '''<remarks/>
        SxS_B
        
        '''<remarks/>
        PD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SystemErrorWarningInfo
        
        Private moduleExistField() As ModuleExistItem
        
        Private errorWarningStatusField() As ErrorWarningStatusItem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Module", IsNullable:=false)>  _
        Public Property ModuleExist() As ModuleExistItem()
            Get
                Return Me.moduleExistField
            End Get
            Set
                Me.moduleExistField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Unit", IsNullable:=false)>  _
        Public Property ErrorWarningStatus() As ErrorWarningStatusItem()
            Get
                Return Me.errorWarningStatusField
            End Get
            Set
                Me.errorWarningStatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PortRemote
        
        Private enabledField As Boolean
        
        Private portIdField As String
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PortId() As String
            Get
                Return Me.portIdField
            End Get
            Set
                Me.portIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class Maintenance
        
        Private repowerRequiredField As Boolean
        
        Private raidRebuildRequiredField As Boolean
        
        '''<remarks/>
        Public Property RepowerRequired() As Boolean
            Get
                Return Me.repowerRequiredField
            End Get
            Set
                Me.repowerRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RaidRebuildRequired() As Boolean
            Get
                Return Me.raidRebuildRequiredField
            End Get
            Set
                Me.raidRebuildRequiredField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyProgress
        
        Private runningField As Boolean
        
        Private srcDriveIdField As String
        
        Private dstDriveIdField As String
        
        '''<remarks/>
        Public Property Running() As Boolean
            Get
                Return Me.runningField
            End Get
            Set
                Me.runningField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcDriveId() As String
            Get
                Return Me.srcDriveIdField
            End Get
            Set
                Me.srcDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DstDriveId() As String
            Get
                Return Me.dstDriveIdField
            End Get
            Set
                Me.dstDriveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class Progress
        
        Private runningField As Boolean
        
        Private progressDetailField As UInteger
        
        Private progressDetailFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Running() As Boolean
            Get
                Return Me.runningField
            End Get
            Set
                Me.runningField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProgressDetail() As UInteger
            Get
                Return Me.progressDetailField
            End Get
            Set
                Me.progressDetailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ProgressDetailSpecified() As Boolean
            Get
                Return Me.progressDetailFieldSpecified
            End Get
            Set
                Me.progressDetailFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class WorkInProgress
        
        Private makeThumbnailField As Progress
        
        Private copyFileField As CopyProgress
        
        Private dataTransferField As Progress
        
        Private shutdownField As Progress
        
        Private rebuildRaidField As Progress
        
        Private transcodeCopyField As CopyProgress
        
        '''<remarks/>
        Public Property MakeThumbnail() As Progress
            Get
                Return Me.makeThumbnailField
            End Get
            Set
                Me.makeThumbnailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CopyFile() As CopyProgress
            Get
                Return Me.copyFileField
            End Get
            Set
                Me.copyFileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataTransfer() As Progress
            Get
                Return Me.dataTransferField
            End Get
            Set
                Me.dataTransferField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Shutdown() As Progress
            Get
                Return Me.shutdownField
            End Get
            Set
                Me.shutdownField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RebuildRaid() As Progress
            Get
                Return Me.rebuildRaidField
            End Get
            Set
                Me.rebuildRaidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TranscodeCopy() As CopyProgress
            Get
                Return Me.transcodeCopyField
            End Get
            Set
                Me.transcodeCopyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class NetAPIInfo
        
        Private linkCountField As UInteger
        
        '''<remarks/>
        Public Property LinkCount() As UInteger
            Get
                Return Me.linkCountField
            End Get
            Set
                Me.linkCountField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SystemInfo
        
        Private monitorOutPortField As String
        
        Private setupChangedField As Boolean
        
        Private netAPIField As NetAPIInfo
        
        Private workInProgressField As WorkInProgress
        
        Private maintenanceField As Maintenance
        
        Private errorOccurredField As Boolean
        
        Private warningOccurredField As Boolean
        
        Private portRemoteField() As PortRemote
        
        '''<remarks/>
        Public Property MonitorOutPort() As String
            Get
                Return Me.monitorOutPortField
            End Get
            Set
                Me.monitorOutPortField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SetupChanged() As Boolean
            Get
                Return Me.setupChangedField
            End Get
            Set
                Me.setupChangedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NetAPI() As NetAPIInfo
            Get
                Return Me.netAPIField
            End Get
            Set
                Me.netAPIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkInProgress() As WorkInProgress
            Get
                Return Me.workInProgressField
            End Get
            Set
                Me.workInProgressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Maintenance() As Maintenance
            Get
                Return Me.maintenanceField
            End Get
            Set
                Me.maintenanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorOccurred() As Boolean
            Get
                Return Me.errorOccurredField
            End Get
            Set
                Me.errorOccurredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WarningOccurred() As Boolean
            Get
                Return Me.warningOccurredField
            End Get
            Set
                Me.warningOccurredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("PortRemote")>  _
        Public Property PortRemote() As PortRemote()
            Get
                Return Me.portRemoteField
            End Get
            Set
                Me.portRemoteField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class Device
        
        Private serialNumberField As String
        
        Private firmwareVersionField As String
        
        Private netAPIVersionField As String
        
        Private internalDriveField As String
        
        Private hasPDDriveField As Boolean
        
        Private sxSRecordingEnabledField As Boolean
        
        Private systemFrequencyField As String
        
        Private vTRModeField As Boolean
        
        '''<remarks/>
        Public Property SerialNumber() As String
            Get
                Return Me.serialNumberField
            End Get
            Set
                Me.serialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirmwareVersion() As String
            Get
                Return Me.firmwareVersionField
            End Get
            Set
                Me.firmwareVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NetAPIVersion() As String
            Get
                Return Me.netAPIVersionField
            End Get
            Set
                Me.netAPIVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InternalDrive() As String
            Get
                Return Me.internalDriveField
            End Get
            Set
                Me.internalDriveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasPDDrive() As Boolean
            Get
                Return Me.hasPDDriveField
            End Get
            Set
                Me.hasPDDriveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SxSRecordingEnabled() As Boolean
            Get
                Return Me.sxSRecordingEnabledField
            End Get
            Set
                Me.sxSRecordingEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SystemFrequency() As String
            Get
                Return Me.systemFrequencyField
            End Get
            Set
                Me.systemFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VTRMode() As Boolean
            Get
                Return Me.vTRModeField
            End Get
            Set
                Me.vTRModeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class Model
        
        Private manufacturerField As String
        
        Private modelNameField As String
        
        '''<remarks/>
        Public Property Manufacturer() As String
            Get
                Return Me.manufacturerField
            End Get
            Set
                Me.manufacturerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModelName() As String
            Get
                Return Me.modelNameField
            End Get
            Set
                Me.modelNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class NonRealTimeDataAreaInfo
        
        Private availableSizeField As ULong
        
        Private capacityField As ULong
        
        '''<remarks/>
        Public Property AvailableSize() As ULong
            Get
                Return Me.availableSizeField
            End Get
            Set
                Me.availableSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Capacity() As ULong
            Get
                Return Me.capacityField
            End Get
            Set
                Me.capacityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class MediaInfo
        
        Private mediaTypeField As MediaType
        
        Private mediaTypeFieldSpecified As Boolean
        
        Private statusField As MediaStatus
        
        Private statusFieldSpecified As Boolean
        
        Private resourceStatusField As MediaResourceStatus
        
        Private resourceStatusFieldSpecified As Boolean
        
        Private writeInhibitedField As Boolean
        
        Private totalClipsField As UInteger
        
        Private capacityField As ULong
        
        Private capacityFieldSpecified As Boolean
        
        Private availableSizeField As ULong
        
        Private availableSizeFieldSpecified As Boolean
        
        Private nonRealTimeDataAreaField As NonRealTimeDataAreaInfo
        
        Private writeProtectEnabledField As Boolean
        
        Private writeProtectEnabledFieldSpecified As Boolean
        
        Private fileSystemField As FileSystem
        
        Private fileSystemFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property MediaType() As MediaType
            Get
                Return Me.mediaTypeField
            End Get
            Set
                Me.mediaTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property MediaTypeSpecified() As Boolean
            Get
                Return Me.mediaTypeFieldSpecified
            End Get
            Set
                Me.mediaTypeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As MediaStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property StatusSpecified() As Boolean
            Get
                Return Me.statusFieldSpecified
            End Get
            Set
                Me.statusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResourceStatus() As MediaResourceStatus
            Get
                Return Me.resourceStatusField
            End Get
            Set
                Me.resourceStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ResourceStatusSpecified() As Boolean
            Get
                Return Me.resourceStatusFieldSpecified
            End Get
            Set
                Me.resourceStatusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WriteInhibited() As Boolean
            Get
                Return Me.writeInhibitedField
            End Get
            Set
                Me.writeInhibitedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalClips() As UInteger
            Get
                Return Me.totalClipsField
            End Get
            Set
                Me.totalClipsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Capacity() As ULong
            Get
                Return Me.capacityField
            End Get
            Set
                Me.capacityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property CapacitySpecified() As Boolean
            Get
                Return Me.capacityFieldSpecified
            End Get
            Set
                Me.capacityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailableSize() As ULong
            Get
                Return Me.availableSizeField
            End Get
            Set
                Me.availableSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property AvailableSizeSpecified() As Boolean
            Get
                Return Me.availableSizeFieldSpecified
            End Get
            Set
                Me.availableSizeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NonRealTimeDataArea() As NonRealTimeDataAreaInfo
            Get
                Return Me.nonRealTimeDataAreaField
            End Get
            Set
                Me.nonRealTimeDataAreaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WriteProtectEnabled() As Boolean
            Get
                Return Me.writeProtectEnabledField
            End Get
            Set
                Me.writeProtectEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property WriteProtectEnabledSpecified() As Boolean
            Get
                Return Me.writeProtectEnabledFieldSpecified
            End Get
            Set
                Me.writeProtectEnabledFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileSystem() As FileSystem
            Get
                Return Me.fileSystemField
            End Get
            Set
                Me.fileSystemField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FileSystemSpecified() As Boolean
            Get
                Return Me.fileSystemFieldSpecified
            End Get
            Set
                Me.fileSystemFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum MediaType
        
        '''<remarks/>
        SL_RE
        
        '''<remarks/>
        DL_RE
        
        '''<remarks/>
        QL_R
        
        '''<remarks/>
        TL_RE
        
        '''<remarks/>
        SxS
        
        '''<remarks/>
        MemoryStick
        
        '''<remarks/>
        SDHC
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum MediaStatus
        
        '''<remarks/>
        Unfinalized
        
        '''<remarks/>
        AlreadyFinalized
        
        '''<remarks/>
        FinalizeInhibited
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum MediaResourceStatus
        
        '''<remarks/>
        Enough
        
        '''<remarks/>
        Few
        
        '''<remarks/>
        Empty
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum FileSystem
        
        '''<remarks/>
        FAT32
        
        '''<remarks/>
        UDF
        
        '''<remarks/>
        exFAT
        
        '''<remarks/>
        Others
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DriveInfo
        
        Private driveIdField As String
        
        Private modeField As DriveMode
        
        Private modeFieldSpecified As Boolean
        
        Private stateField As DriveState
        
        Private mediaExistsField As Boolean
        
        Private mediaField As MediaInfo
        
        Private mediaPresentField As MediaPresent
        
        Private mediaPresentFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As DriveMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModeSpecified() As Boolean
            Get
                Return Me.modeFieldSpecified
            End Get
            Set
                Me.modeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As DriveState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MediaExists() As Boolean
            Get
                Return Me.mediaExistsField
            End Get
            Set
                Me.mediaExistsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Media() As MediaInfo
            Get
                Return Me.mediaField
            End Get
            Set
                Me.mediaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MediaPresent() As MediaPresent
            Get
                Return Me.mediaPresentField
            End Get
            Set
                Me.mediaPresentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property MediaPresentSpecified() As Boolean
            Get
                Return Me.mediaPresentFieldSpecified
            End Get
            Set
                Me.mediaPresentFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum DriveMode
        
        '''<remarks/>
        StandbyOff
        
        '''<remarks/>
        StandbyOn
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum DriveState
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Formatting
        
        '''<remarks/>
        Mounting
        
        '''<remarks/>
        Unmounting
        
        '''<remarks/>
        Mounted
        
        '''<remarks/>
        Finalizing
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum MediaPresent
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Exists
        
        '''<remarks/>
        Invalid
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyInfo
        
        Private processIdField As UInteger
        
        Private copiedFrameCountField As UInteger
        
        Private unchangedUMIDModeField As Boolean
        
        Private srcInPointField As UInteger
        
        Private srcDurationField As UInteger
        
        Private srcDriveIdField As String
        
        Private srcFileNameField As String
        
        Private dstDriveIdField As String
        
        Private dstFileNameField As String
        
        Private realDstDriveIdField As String
        
        Private realDstFileNameField As String
        
        '''<remarks/>
        Public Property ProcessId() As UInteger
            Get
                Return Me.processIdField
            End Get
            Set
                Me.processIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CopiedFrameCount() As UInteger
            Get
                Return Me.copiedFrameCountField
            End Get
            Set
                Me.copiedFrameCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnchangedUMIDMode() As Boolean
            Get
                Return Me.unchangedUMIDModeField
            End Get
            Set
                Me.unchangedUMIDModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcInPoint() As UInteger
            Get
                Return Me.srcInPointField
            End Get
            Set
                Me.srcInPointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcDuration() As UInteger
            Get
                Return Me.srcDurationField
            End Get
            Set
                Me.srcDurationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcDriveId() As String
            Get
                Return Me.srcDriveIdField
            End Get
            Set
                Me.srcDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcFileName() As String
            Get
                Return Me.srcFileNameField
            End Get
            Set
                Me.srcFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DstDriveId() As String
            Get
                Return Me.dstDriveIdField
            End Get
            Set
                Me.dstDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DstFileName() As String
            Get
                Return Me.dstFileNameField
            End Get
            Set
                Me.dstFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RealDstDriveId() As String
            Get
                Return Me.realDstDriveIdField
            End Get
            Set
                Me.realDstDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RealDstFileName() As String
            Get
                Return Me.realDstFileNameField
            End Get
            Set
                Me.realDstFileNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class BinaryData
        
        Private dataField() As Byte
        
        Private contentTypeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Data() As Byte()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Qualified, [Namespace]:="http://www.w3.org/2005/05/xmlmime")>  _
        Public Property contentType() As String
            Get
                Return Me.contentTypeField
            End Get
            Set
                Me.contentTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetClipProps
        
        Private flagField As ClipFlag
        
        Private flagFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Flag() As ClipFlag
            Get
                Return Me.flagField
            End Get
            Set
                Me.flagField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FlagSpecified() As Boolean
            Get
                Return Me.flagFieldSpecified
            End Get
            Set
                Me.flagFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RecRemain
        
        Private mediaLimitField As Boolean
        
        Private clipLimitField As Boolean
        
        '''<remarks/>
        Public Property MediaLimit() As Boolean
            Get
                Return Me.mediaLimitField
            End Get
            Set
                Me.mediaLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipLimit() As Boolean
            Get
                Return Me.clipLimitField
            End Get
            Set
                Me.clipLimitField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RecorderInfo
        
        Private stateField As RecorderState
        
        Private portField() As PortInfo
        
        Private recRemainField As RecRemain
        
        Private modeField As RecorderMode
        
        Private modeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property State() As RecorderState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Port")>  _
        Public Property Port() As PortInfo()
            Get
                Return Me.portField
            End Get
            Set
                Me.portField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecRemain() As RecRemain
            Get
                Return Me.recRemainField
            End Get
            Set
                Me.recRemainField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As RecorderMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModeSpecified() As Boolean
            Get
                Return Me.modeFieldSpecified
            End Get
            Set
                Me.modeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum RecorderState
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Record
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PortInfo
        
        Private portIdField As String
        
        Private portTypeField As PortType
        
        Private localEnabledField As Boolean
        
        Private busyField As Boolean
        
        Private speedField As Single
        
        Private videoField As PortVideoInfo
        
        Private audioField() As AudioChannel
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private cueupClipNameField As String
        
        Private standbyField As Boolean
        
        Private standbyFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property PortId() As String
            Get
                Return Me.portIdField
            End Get
            Set
                Me.portIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PortType() As PortType
            Get
                Return Me.portTypeField
            End Get
            Set
                Me.portTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocalEnabled() As Boolean
            Get
                Return Me.localEnabledField
            End Get
            Set
                Me.localEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Busy() As Boolean
            Get
                Return Me.busyField
            End Get
            Set
                Me.busyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Video() As PortVideoInfo
            Get
                Return Me.videoField
            End Get
            Set
                Me.videoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Audio() As AudioChannel()
            Get
                Return Me.audioField
            End Get
            Set
                Me.audioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CueupClipName() As String
            Get
                Return Me.cueupClipNameField
            End Get
            Set
                Me.cueupClipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Standby() As Boolean
            Get
                Return Me.standbyField
            End Get
            Set
                Me.standbyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property StandbySpecified() As Boolean
            Get
                Return Me.standbyFieldSpecified
            End Get
            Set
                Me.standbyFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PortType
        
        '''<remarks/>
        Record
        
        '''<remarks/>
        Playback
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PortVideoInfo
        
        Private statusField As PortVideoStatus
        
        Private statusFieldSpecified As Boolean
        
        Private hasVITCField As Boolean
        
        Private vITCField As TimeCode
        
        Private vITCUserBitDataField() As Byte
        
        Private lTCField As TimeCode
        
        Private lTCUserBitDataField() As Byte
        
        Private counterField As TimeCode
        
        Private frameCountField As UInteger
        
        Private pDTCAvailableField As Boolean
        
        Private pDTCAvailableFieldSpecified As Boolean
        
        Private pDTCField As TimeCode
        
        Private totalOffsetField As UInteger
        
        Private totalOffsetFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Status() As PortVideoStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property StatusSpecified() As Boolean
            Get
                Return Me.statusFieldSpecified
            End Get
            Set
                Me.statusFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasVITC() As Boolean
            Get
                Return Me.hasVITCField
            End Get
            Set
                Me.hasVITCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VITC() As TimeCode
            Get
                Return Me.vITCField
            End Get
            Set
                Me.vITCField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property VITCUserBitData() As Byte()
            Get
                Return Me.vITCUserBitDataField
            End Get
            Set
                Me.vITCUserBitDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LTC() As TimeCode
            Get
                Return Me.lTCField
            End Get
            Set
                Me.lTCField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property LTCUserBitData() As Byte()
            Get
                Return Me.lTCUserBitDataField
            End Get
            Set
                Me.lTCUserBitDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Counter() As TimeCode
            Get
                Return Me.counterField
            End Get
            Set
                Me.counterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FrameCount() As UInteger
            Get
                Return Me.frameCountField
            End Get
            Set
                Me.frameCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PDTCAvailable() As Boolean
            Get
                Return Me.pDTCAvailableField
            End Get
            Set
                Me.pDTCAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property PDTCAvailableSpecified() As Boolean
            Get
                Return Me.pDTCAvailableFieldSpecified
            End Get
            Set
                Me.pDTCAvailableFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PDTC() As TimeCode
            Get
                Return Me.pDTCField
            End Get
            Set
                Me.pDTCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalOffset() As UInteger
            Get
                Return Me.totalOffsetField
            End Get
            Set
                Me.totalOffsetField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property TotalOffsetSpecified() As Boolean
            Get
                Return Me.totalOffsetFieldSpecified
            End Get
            Set
                Me.totalOffsetFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PortVideoStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Input
        
        '''<remarks/>
        Output
        
        '''<remarks/>
        InternalSG
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AudioChannel
        
        Private channelField As UInteger
        
        Private nonAudioField As Boolean
        
        Private levelField As Integer
        
        Private hasInputField As Boolean
        
        Private hasInputFieldSpecified As Boolean
        
        Private emphasisField As Boolean
        
        Private emphasisFieldSpecified As Boolean
        
        Private usageField As AudioUsage
        
        Private usageFieldSpecified As Boolean
        
        Private hasOutputField As Boolean
        
        Private hasOutputFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Channel() As UInteger
            Get
                Return Me.channelField
            End Get
            Set
                Me.channelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NonAudio() As Boolean
            Get
                Return Me.nonAudioField
            End Get
            Set
                Me.nonAudioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Level() As Integer
            Get
                Return Me.levelField
            End Get
            Set
                Me.levelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasInput() As Boolean
            Get
                Return Me.hasInputField
            End Get
            Set
                Me.hasInputField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property HasInputSpecified() As Boolean
            Get
                Return Me.hasInputFieldSpecified
            End Get
            Set
                Me.hasInputFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Emphasis() As Boolean
            Get
                Return Me.emphasisField
            End Get
            Set
                Me.emphasisField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EmphasisSpecified() As Boolean
            Get
                Return Me.emphasisFieldSpecified
            End Get
            Set
                Me.emphasisFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Usage() As AudioUsage
            Get
                Return Me.usageField
            End Get
            Set
                Me.usageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property UsageSpecified() As Boolean
            Get
                Return Me.usageFieldSpecified
            End Get
            Set
                Me.usageFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HasOutput() As Boolean
            Get
                Return Me.hasOutputField
            End Get
            Set
                Me.hasOutputField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property HasOutputSpecified() As Boolean
            Get
                Return Me.hasOutputFieldSpecified
            End Get
            Set
                Me.hasOutputFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum AudioUsage
        
        '''<remarks/>
        Consumer
        
        '''<remarks/>
        Professional
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum RecorderMode
        
        '''<remarks/>
        Normal
        
        '''<remarks/>
        PreRead
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PlayerInfo
        
        Private stateField As PlayerState
        
        Private modeField As PlayerMode
        
        Private refStatusField As PlayerRefStatus
        
        Private portField() As PortInfo
        
        Private playModeField As PlayMode
        
        Private playModeFieldSpecified As Boolean
        
        Private clipTypeField As ClipType
        
        Private clipTypeFieldSpecified As Boolean
        
        Private eDLSubClipNumberField As UInteger
        
        Private eDLSubClipNumberFieldSpecified As Boolean
        
        Private eDLSubClipTotalNumberField As UInteger
        
        Private eDLSubClipTotalNumberFieldSpecified As Boolean
        
        Private stopMarkDetectionEnabledField As Boolean
        
        Private stopMarkDetectionEnabledFieldSpecified As Boolean
        
        Private copyPlayField As Boolean
        
        Private copyPlayFieldSpecified As Boolean
        
        Private inputCheckField As Boolean
        
        Private inputCheckFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property State() As PlayerState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As PlayerMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RefStatus() As PlayerRefStatus
            Get
                Return Me.refStatusField
            End Get
            Set
                Me.refStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Port")>  _
        Public Property Port() As PortInfo()
            Get
                Return Me.portField
            End Get
            Set
                Me.portField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PlayMode() As PlayMode
            Get
                Return Me.playModeField
            End Get
            Set
                Me.playModeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property PlayModeSpecified() As Boolean
            Get
                Return Me.playModeFieldSpecified
            End Get
            Set
                Me.playModeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipType() As ClipType
            Get
                Return Me.clipTypeField
            End Get
            Set
                Me.clipTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ClipTypeSpecified() As Boolean
            Get
                Return Me.clipTypeFieldSpecified
            End Get
            Set
                Me.clipTypeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EDLSubClipNumber() As UInteger
            Get
                Return Me.eDLSubClipNumberField
            End Get
            Set
                Me.eDLSubClipNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EDLSubClipNumberSpecified() As Boolean
            Get
                Return Me.eDLSubClipNumberFieldSpecified
            End Get
            Set
                Me.eDLSubClipNumberFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EDLSubClipTotalNumber() As UInteger
            Get
                Return Me.eDLSubClipTotalNumberField
            End Get
            Set
                Me.eDLSubClipTotalNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EDLSubClipTotalNumberSpecified() As Boolean
            Get
                Return Me.eDLSubClipTotalNumberFieldSpecified
            End Get
            Set
                Me.eDLSubClipTotalNumberFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StopMarkDetectionEnabled() As Boolean
            Get
                Return Me.stopMarkDetectionEnabledField
            End Get
            Set
                Me.stopMarkDetectionEnabledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property StopMarkDetectionEnabledSpecified() As Boolean
            Get
                Return Me.stopMarkDetectionEnabledFieldSpecified
            End Get
            Set
                Me.stopMarkDetectionEnabledFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CopyPlay() As Boolean
            Get
                Return Me.copyPlayField
            End Get
            Set
                Me.copyPlayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property CopyPlaySpecified() As Boolean
            Get
                Return Me.copyPlayFieldSpecified
            End Get
            Set
                Me.copyPlayFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InputCheck() As Boolean
            Get
                Return Me.inputCheckField
            End Get
            Set
                Me.inputCheckField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property InputCheckSpecified() As Boolean
            Get
                Return Me.inputCheckFieldSpecified
            End Get
            Set
                Me.inputCheckFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PlayerState
        
        '''<remarks/>
        None
        
        '''<remarks/>
        [Stop]
        
        '''<remarks/>
        Rewind
        
        '''<remarks/>
        FastForward
        
        '''<remarks/>
        Play
        
        '''<remarks/>
        Shuttle
        
        '''<remarks/>
        Jog
        
        '''<remarks/>
        Var
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PlayerMode
        
        '''<remarks/>
        VDCP
        
        '''<remarks/>
        TapeLike
        
        '''<remarks/>
        SingleClip
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum PlayerRefStatus
        
        '''<remarks/>
        Internal
        
        '''<remarks/>
        InputVideo
        
        '''<remarks/>
        Ext_HD
        
        '''<remarks/>
        Ext_SD
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum ClipType
        
        '''<remarks/>
        Clip
        
        '''<remarks/>
        EDL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class OpenPlayerResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ClosePlayerRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ClosePlayerResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerStatusRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerStatusResponse
        
        Private statusField As PlayerInfo
        
        '''<remarks/>
        Public Property Status() As PlayerInfo
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerScopeRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerScopeResponse
        
        Private beginField() As Byte
        
        Private endField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property Begin() As Byte()
            Get
                Return Me.beginField
            End Get
            Set
                Me.beginField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="hexBinary")>  _
        Public Property [End]() As Byte()
            Get
                Return Me.endField
            End Get
            Set
                Me.endField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerStopMarkDetectionRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerStopMarkDetectionResponse
        
        Private enabledField As Boolean
        
        Private offsetField As UInteger
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerStopMarkDetectionRequest
        
        Private playerIdField As String
        
        Private enabledField As Boolean
        
        Private offsetField As UInteger
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerStopMarkDetectionResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PlayRequest
        
        Private playerIdField As String
        
        Private modeField As PlayMode
        
        Private modeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As PlayMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModeSpecified() As Boolean
            Get
                Return Me.modeFieldSpecified
            End Get
            Set
                Me.modeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PlayResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PauseRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class PauseResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FastForwardRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FastForwardResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RewindRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RewindResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ShuttleRequest
        
        Private playerIdField As String
        
        Private speedField As Single
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ShuttleResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StepRequest
        
        Private playerIdField As String
        
        Private framesField As Integer
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frames() As Integer
            Get
                Return Me.framesField
            End Get
            Set
                Me.framesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StepResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class JogRequest
        
        Private playerIdField As String
        
        Private speedField As Single
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class JogResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class VarRequest
        
        Private playerIdField As String
        
        Private speedField As Single
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Speed() As Single
            Get
                Return Me.speedField
            End Get
            Set
                Me.speedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class VarResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class OpenRecorderRequest
        
        Private recorderIdField As String
        
        Private recorderModeField As OpenRecorderMode
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private framesField As UInteger
        
        Private framesFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecorderMode() As OpenRecorderMode
            Get
                Return Me.recorderModeField
            End Get
            Set
                Me.recorderModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frames() As UInteger
            Get
                Return Me.framesField
            End Get
            Set
                Me.framesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FramesSpecified() As Boolean
            Get
                Return Me.framesFieldSpecified
            End Get
            Set
                Me.framesFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum OpenRecorderMode
        
        '''<remarks/>
        Record
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class OpenRecorderResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CloseRecorderRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CloseRecorderResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderStatusRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderStatusResponse
        
        Private statusField As RecorderInfo
        
        '''<remarks/>
        Public Property Status() As RecorderInfo
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetClipPropertiesRequest
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetClipPropertiesResponse
        
        Private propertyField As ClipInfo
        
        '''<remarks/>
        Public Property [Property]() As ClipInfo
            Get
                Return Me.propertyField
            End Get
            Set
                Me.propertyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetClipPropertiesRequest
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private propertyField As SetClipProps
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Property]() As SetClipProps
            Get
                Return Me.propertyField
            End Get
            Set
                Me.propertyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetClipPropertiesResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetClipListRequest
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetClipThumbnailRequest
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private frameField As UInteger
        
        Private frameFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frame() As UInteger
            Get
                Return Me.frameField
            End Get
            Set
                Me.frameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FrameSpecified() As Boolean
            Get
                Return Me.frameFieldSpecified
            End Get
            Set
                Me.frameFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetClipThumbnailResponse
        
        Private thumbnailField As BinaryData
        
        '''<remarks/>
        Public Property Thumbnail() As BinaryData
            Get
                Return Me.thumbnailField
            End Get
            Set
                Me.thumbnailField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyFileRequest
        
        Private srcDriveIdField As String
        
        Private srcFileNameField As String
        
        Private dstDriveIdField As String
        
        Private dstFileNameField As String
        
        Private startFrameField As UInteger
        
        Private startFrameFieldSpecified As Boolean
        
        Private framesField As UInteger
        
        Private framesFieldSpecified As Boolean
        
        Private modeField As CopyMode
        
        Private modeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property SrcDriveId() As String
            Get
                Return Me.srcDriveIdField
            End Get
            Set
                Me.srcDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SrcFileName() As String
            Get
                Return Me.srcFileNameField
            End Get
            Set
                Me.srcFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DstDriveId() As String
            Get
                Return Me.dstDriveIdField
            End Get
            Set
                Me.dstDriveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DstFileName() As String
            Get
                Return Me.dstFileNameField
            End Get
            Set
                Me.dstFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartFrame() As UInteger
            Get
                Return Me.startFrameField
            End Get
            Set
                Me.startFrameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property StartFrameSpecified() As Boolean
            Get
                Return Me.startFrameFieldSpecified
            End Get
            Set
                Me.startFrameFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Frames() As UInteger
            Get
                Return Me.framesField
            End Get
            Set
                Me.framesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property FramesSpecified() As Boolean
            Get
                Return Me.framesFieldSpecified
            End Get
            Set
                Me.framesFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As CopyMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModeSpecified() As Boolean
            Get
                Return Me.modeFieldSpecified
            End Get
            Set
                Me.modeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum CopyMode
        
        '''<remarks/>
        Transcode
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class CopyFileResponse
        
        Private processIdField As UInteger
        
        '''<remarks/>
        Public Property ProcessId() As UInteger
            Get
                Return Me.processIdField
            End Get
            Set
                Me.processIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetCopyStatusRequest
        
        Private modeField As CopyMode
        
        Private modeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Mode() As CopyMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModeSpecified() As Boolean
            Get
                Return Me.modeFieldSpecified
            End Get
            Set
                Me.modeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetCopyStatusResponse
        
        Private statusField As CopyInfo
        
        '''<remarks/>
        Public Property Status() As CopyInfo
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetFileDeleteProtectionRequest
        
        Private driveIdField As String
        
        Private fileNameField As String
        
        Private protectField As Boolean
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Protect() As Boolean
            Get
                Return Me.protectField
            End Get
            Set
                Me.protectField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetFileDeleteProtectionResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RenameFileRequest
        
        Private driveIdField As String
        
        Private oldFileNameField As String
        
        Private newFileNameField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OldFileName() As String
            Get
                Return Me.oldFileNameField
            End Get
            Set
                Me.oldFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewFileName() As String
            Get
                Return Me.newFileNameField
            End Get
            Set
                Me.newFileNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class RenameFileResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteFileRequest
        
        Private driveIdField As String
        
        Private fileNameField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteFileResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FormatRequest
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FormatResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class EjectRequest
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class EjectResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FinalizeRequest
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class FinalizeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetDriveModeRequest
        
        Private driveIdField As String
        
        Private modeField As DriveMode
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As DriveMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetDriveModeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetMediaPropertiesRequest
        
        Private driveIdField As String
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetMediaPropertiesResponse
        
        Private mediaIdField As String
        
        Private userDiscIdField As String
        
        Private titleField As String
        
        Private subTitleField As String
        
        Private updateCountField As UInteger
        
        Private updateCountFieldSpecified As Boolean
        
        Private lifetimeField As UInteger
        
        Private lifetimeFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property MediaId() As String
            Get
                Return Me.mediaIdField
            End Get
            Set
                Me.mediaIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserDiscId() As String
            Get
                Return Me.userDiscIdField
            End Get
            Set
                Me.userDiscIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubTitle() As String
            Get
                Return Me.subTitleField
            End Get
            Set
                Me.subTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdateCount() As UInteger
            Get
                Return Me.updateCountField
            End Get
            Set
                Me.updateCountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property UpdateCountSpecified() As Boolean
            Get
                Return Me.updateCountFieldSpecified
            End Get
            Set
                Me.updateCountFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lifetime() As UInteger
            Get
                Return Me.lifetimeField
            End Get
            Set
                Me.lifetimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property LifetimeSpecified() As Boolean
            Get
                Return Me.lifetimeFieldSpecified
            End Get
            Set
                Me.lifetimeFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemPropertiesRequest
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemPropertiesResponse
        
        Private modelField As Model
        
        Private deviceField As Device
        
        '''<remarks/>
        Public Property Model() As Model
            Get
                Return Me.modelField
            End Get
            Set
                Me.modelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Device() As Device
            Get
                Return Me.deviceField
            End Get
            Set
                Me.deviceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemStatusRequest
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemStatusResponse
        
        Private statusField As SystemInfo
        
        '''<remarks/>
        Public Property Status() As SystemInfo
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemErrorWarningRequest
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemErrorWarningResponse
        
        Private errorWarningInfoField As SystemErrorWarningInfo
        
        '''<remarks/>
        Public Property ErrorWarningInfo() As SystemErrorWarningInfo
            Get
                Return Me.errorWarningInfoField
            End Get
            Set
                Me.errorWarningInfoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ShutdownRequest
        
        Private secondsField As UInteger
        
        '''<remarks/>
        Public Property Seconds() As UInteger
            Get
                Return Me.secondsField
            End Get
            Set
                Me.secondsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class ShutdownResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AbortProcessRequest
        
        Private processIdField As UInteger
        
        '''<remarks/>
        Public Property ProcessId() As UInteger
            Get
                Return Me.processIdField
            End Get
            Set
                Me.processIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AbortProcessResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemEventSessionIdRequest
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemEventSessionIdResponse
        
        Private sessionIdField As String
        
        '''<remarks/>
        Public Property SessionId() As String
            Get
                Return Me.sessionIdField
            End Get
            Set
                Me.sessionIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetSystemEventRequest
        
        Private sessionIdField As String
        
        '''<remarks/>
        Public Property SessionId() As String
            Get
                Return Me.sessionIdField
            End Get
            Set
                Me.sessionIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddEssenceMarkRequest
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private offsetField As UInteger
        
        Private essenceMarkField As EssenceMark
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EssenceMark() As EssenceMark
            Get
                Return Me.essenceMarkField
            End Get
            Set
                Me.essenceMarkField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum EssenceMark
        
        '''<remarks/>
        RecStart
        
        '''<remarks/>
        Flash
        
        '''<remarks/>
        OverAudioLimiter
        
        '''<remarks/>
        WhiteBalanceChange
        
        '''<remarks/>
        FilterChange
        
        '''<remarks/>
        ShutterSpeedChange
        
        '''<remarks/>
        GainChange
        
        '''<remarks/>
        ShotMark1
        
        '''<remarks/>
        ShotMark2
        
        '''<remarks/>
        ShotMark3
        
        '''<remarks/>
        ShotMark4
        
        '''<remarks/>
        ShotMark5
        
        '''<remarks/>
        ShotMark6
        
        '''<remarks/>
        ShotMark7
        
        '''<remarks/>
        ShotMark8
        
        '''<remarks/>
        ShotMark9
        
        '''<remarks/>
        ShotMark0
        
        '''<remarks/>
        Cut
        
        '''<remarks/>
        Other
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddEssenceMarkResponse
        
        Private offsetField As UInteger
        
        Private lTCField As TimeCode
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LTC() As TimeCode
            Get
                Return Me.lTCField
            End Get
            Set
                Me.lTCField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteEssenceMarkRequest
        
        Private driveIdField As String
        
        Private clipNameField As String
        
        Private offsetField() As UInteger
        
        '''<remarks/>
        Public Property DriveId() As String
            Get
                Return Me.driveIdField
            End Get
            Set
                Me.driveIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClipName() As String
            Get
                Return Me.clipNameField
            End Get
            Set
                Me.clipNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Offset")>  _
        Public Property Offset() As UInteger()
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteEssenceMarkResponse
        
        Private deletedEssenceMarksField As UInteger
        
        '''<remarks/>
        Public Property DeletedEssenceMarks() As UInteger
            Get
                Return Me.deletedEssenceMarksField
            End Get
            Set
                Me.deletedEssenceMarksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerTimeLineRequest
        
        Private playerIdField As String
        
        Private enabledField As Boolean
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerTimeLineStatusRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerTimeLineStatusResponse
        
        Private statusField As TimeLineStatus
        
        '''<remarks/>
        Public Property Status() As TimeLineStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerTimeLineStartTimeRequest
        
        Private playerIdField As String
        
        Private startTimeField As TimeCode
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartTime() As TimeCode
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetPlayerTimeLineStartTimeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StartPlayerTimeLineRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StartPlayerTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StopPlayerTimeLineRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StopPlayerTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerTimeLineEventStatusRequest
        
        Private playerIdField As String
        
        Private eventIdField As UInteger
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetPlayerTimeLineEventStatusResponse
        
        Private statusField As TimeLineEventStatus
        
        Private errorCodeField As SystemErrorCode
        
        Private errorCodeFieldSpecified As Boolean
        
        Private offsetField As UInteger
        
        Private offsetFieldSpecified As Boolean
        
        Private eventField As PlayerTimeLineEvent
        
        '''<remarks/>
        Public Property Status() As TimeLineEventStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As SystemErrorCode
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ErrorCodeSpecified() As Boolean
            Get
                Return Me.errorCodeFieldSpecified
            End Get
            Set
                Me.errorCodeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property OffsetSpecified() As Boolean
            Get
                Return Me.offsetFieldSpecified
            End Get
            Set
                Me.offsetFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Event]() As PlayerTimeLineEvent
            Get
                Return Me.eventField
            End Get
            Set
                Me.eventField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeLineEventStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Registered
        
        '''<remarks/>
        InProgress
        
        '''<remarks/>
        Completed
        
        '''<remarks/>
        [Error]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddPlayerTimeLineEventRequest
        
        Private playerIdField As String
        
        Private eventIdField As UInteger
        
        Private offsetField As UInteger
        
        Private eventField As PlayerTimeLineEvent
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Event]() As PlayerTimeLineEvent
            Get
                Return Me.eventField
            End Get
            Set
                Me.eventField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddPlayerTimeLineEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeletePlayerTimeLineEventRequest
        
        Private playerIdField As String
        
        Private eventIdField As UInteger
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeletePlayerTimeLineEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineRequest
        
        Private recorderIdField As String
        
        Private enabledField As Boolean
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderTimeLineStatusRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderTimeLineStatusResponse
        
        Private statusField As TimeLineStatus
        
        '''<remarks/>
        Public Property Status() As TimeLineStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineStartTimeRequest
        
        Private recorderIdField As String
        
        Private startTimeField As TimeCode
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartTime() As TimeCode
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineStartTimeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StartRecorderTimeLineRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StartRecorderTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StopRecorderTimeLineRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class StopRecorderTimeLineResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderTimeLineEventStatusRequest
        
        Private recorderIdField As String
        
        Private eventIdField As UInteger
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class GetRecorderTimeLineEventStatusResponse
        
        Private statusField As TimeLineEventStatus
        
        Private errorCodeField As SystemErrorCode
        
        Private errorCodeFieldSpecified As Boolean
        
        Private offsetField As UInteger
        
        Private offsetFieldSpecified As Boolean
        
        Private eventField As RecorderTimeLineEvent
        
        '''<remarks/>
        Public Property Status() As TimeLineEventStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As SystemErrorCode
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ErrorCodeSpecified() As Boolean
            Get
                Return Me.errorCodeFieldSpecified
            End Get
            Set
                Me.errorCodeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property OffsetSpecified() As Boolean
            Get
                Return Me.offsetFieldSpecified
            End Get
            Set
                Me.offsetFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Event]() As RecorderTimeLineEvent
            Get
                Return Me.eventField
            End Get
            Set
                Me.eventField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddRecorderTimeLineEventRequest
        
        Private recorderIdField As String
        
        Private eventIdField As UInteger
        
        Private offsetField As UInteger
        
        Private eventField As RecorderTimeLineEvent
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Offset() As UInteger
            Get
                Return Me.offsetField
            End Get
            Set
                Me.offsetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Event]() As RecorderTimeLineEvent
            Get
                Return Me.eventField
            End Get
            Set
                Me.eventField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddRecorderTimeLineEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteRecorderTimeLineEventRequest
        
        Private recorderIdField As String
        
        Private eventIdField As UInteger
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventId() As UInteger
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteRecorderTimeLineEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorModeRequest
        
        Private recorderIdField As String
        
        Private sourceField As TimeCodeGeneratorSource
        
        Private modeField As TimeCodeGeneratorMode
        
        Private runModeField As TimeCodeGeneratorRunMode
        
        Private steppingModeField As TimeCodeGeneratorSteppingMode
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Source() As TimeCodeGeneratorSource
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As TimeCodeGeneratorMode
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RunMode() As TimeCodeGeneratorRunMode
            Get
                Return Me.runModeField
            End Get
            Set
                Me.runModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SteppingMode() As TimeCodeGeneratorSteppingMode
            Get
                Return Me.steppingModeField
            End Get
            Set
                Me.steppingModeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeCodeGeneratorSource
        
        '''<remarks/>
        Internal
        
        '''<remarks/>
        External
        
        '''<remarks/>
        SystemTimeCode
        
        '''<remarks/>
        SDI
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeCodeGeneratorMode
        
        '''<remarks/>
        Preset
        
        '''<remarks/>
        TimeCode
        
        '''<remarks/>
        VITC
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeCodeGeneratorRunMode
        
        '''<remarks/>
        Free
        
        '''<remarks/>
        Rec
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Public Enum TimeCodeGeneratorSteppingMode
        
        '''<remarks/>
        DropFrame
        
        '''<remarks/>
        NonDropFrame
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorModeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorStartTimeRequest
        
        Private recorderIdField As String
        
        Private presetValueField As TimeCode
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PresetValue() As TimeCode
            Get
                Return Me.presetValueField
            End Get
            Set
                Me.presetValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeletePlayerTimeLineAllEventRequest
        
        Private playerIdField As String
        
        '''<remarks/>
        Public Property PlayerId() As String
            Get
                Return Me.playerIdField
            End Get
            Set
                Me.playerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeletePlayerTimeLineAllEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteRecorderTimeLineAllEventRequest
        
        Private recorderIdField As String
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class DeleteRecorderTimeLineAllEventResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddEssenceMarkToUnnamedRecordingClipRequest
        
        Private recorderIdField As String
        
        Private essenceMarkField As EssenceMark
        
        '''<remarks/>
        Public Property RecorderId() As String
            Get
                Return Me.recorderIdField
            End Get
            Set
                Me.recorderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EssenceMark() As EssenceMark
            Get
                Return Me.essenceMarkField
            End Get
            Set
                Me.essenceMarkField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://xmlns.sony.net/professional/wsdl/xdcam/2011/06/mediastation")>  _
    Partial Public Class AddEssenceMarkToUnnamedRecordingClipResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub OpenPlayerCompletedEventHandler(ByVal sender As Object, ByVal e As OpenPlayerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenPlayerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OpenPlayerResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OpenPlayerResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub ClosePlayerCompletedEventHandler(ByVal sender As Object, ByVal e As ClosePlayerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClosePlayerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClosePlayerResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClosePlayerResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetPlayerStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlayerStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlayerStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetPlayerStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetPlayerStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetPlayerScopeCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlayerScopeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlayerScopeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetPlayerScopeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetPlayerScopeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetPlayerStopMarkDetectionCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlayerStopMarkDetectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlayerStopMarkDetectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetPlayerStopMarkDetectionResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetPlayerStopMarkDetectionResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetPlayerStopMarkDetectionCompletedEventHandler(ByVal sender As Object, ByVal e As SetPlayerStopMarkDetectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPlayerStopMarkDetectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetPlayerStopMarkDetectionResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetPlayerStopMarkDetectionResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub PlayCompletedEventHandler(ByVal sender As Object, ByVal e As PlayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PlayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PlayResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PlayResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub PauseCompletedEventHandler(ByVal sender As Object, ByVal e As PauseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PauseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PauseResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PauseResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub FastForwardCompletedEventHandler(ByVal sender As Object, ByVal e As FastForwardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FastForwardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FastForwardResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FastForwardResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub RewindCompletedEventHandler(ByVal sender As Object, ByVal e As RewindCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RewindCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RewindResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RewindResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub ShuttleCompletedEventHandler(ByVal sender As Object, ByVal e As ShuttleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ShuttleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ShuttleResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ShuttleResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub StepCompletedEventHandler(ByVal sender As Object, ByVal e As StepCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StepCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StepResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StepResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub JogCompletedEventHandler(ByVal sender As Object, ByVal e As JogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class JogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As JogResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),JogResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub VarCompletedEventHandler(ByVal sender As Object, ByVal e As VarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As VarResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),VarResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub OpenRecorderCompletedEventHandler(ByVal sender As Object, ByVal e As OpenRecorderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OpenRecorderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OpenRecorderResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OpenRecorderResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub CloseRecorderCompletedEventHandler(ByVal sender As Object, ByVal e As CloseRecorderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CloseRecorderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CloseRecorderResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CloseRecorderResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetRecorderStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecorderStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecorderStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetRecorderStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetRecorderStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetClipPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetClipPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClipPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetClipPropertiesResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetClipPropertiesResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetClipPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As SetClipPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetClipPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetClipPropertiesResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetClipPropertiesResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetClipListCompletedEventHandler(ByVal sender As Object, ByVal e As GetClipListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClipListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClipInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClipInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetClipThumbnailCompletedEventHandler(ByVal sender As Object, ByVal e As GetClipThumbnailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClipThumbnailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetClipThumbnailResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetClipThumbnailResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub CopyFileCompletedEventHandler(ByVal sender As Object, ByVal e As CopyFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CopyFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CopyFileResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CopyFileResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetCopyStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetCopyStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCopyStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetCopyStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetCopyStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetFileDeleteProtectionCompletedEventHandler(ByVal sender As Object, ByVal e As SetFileDeleteProtectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetFileDeleteProtectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetFileDeleteProtectionResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetFileDeleteProtectionResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub RenameFileCompletedEventHandler(ByVal sender As Object, ByVal e As RenameFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RenameFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RenameFileResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RenameFileResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeleteFileCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeleteFileResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeleteFileResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub FormatCompletedEventHandler(ByVal sender As Object, ByVal e As FormatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FormatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FormatResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FormatResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub EjectCompletedEventHandler(ByVal sender As Object, ByVal e As EjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EjectResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EjectResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub FinalizeCompletedEventHandler(ByVal sender As Object, ByVal e As FinalizeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FinalizeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FinalizeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FinalizeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetDriveModeCompletedEventHandler(ByVal sender As Object, ByVal e As SetDriveModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetDriveModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetDriveModeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetDriveModeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetDriveStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetDriveStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDriveStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DriveInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DriveInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetMediaPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMediaPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMediaPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetMediaPropertiesResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetMediaPropertiesResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetSystemPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSystemPropertiesResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSystemPropertiesResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetSystemStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSystemStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSystemStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetSystemErrorWarningCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemErrorWarningCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemErrorWarningCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSystemErrorWarningResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSystemErrorWarningResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub ShutdownCompletedEventHandler(ByVal sender As Object, ByVal e As ShutdownCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ShutdownCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ShutdownResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ShutdownResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AbortProcessCompletedEventHandler(ByVal sender As Object, ByVal e As AbortProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AbortProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AbortProcessResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AbortProcessResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetSystemEventSessionIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemEventSessionIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemEventSessionIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetSystemEventSessionIdResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetSystemEventSessionIdResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetSystemEventCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SystemEvent()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SystemEvent())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AddEssenceMarkCompletedEventHandler(ByVal sender As Object, ByVal e As AddEssenceMarkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddEssenceMarkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddEssenceMarkResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddEssenceMarkResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeleteEssenceMarkCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteEssenceMarkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteEssenceMarkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeleteEssenceMarkResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeleteEssenceMarkResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetPlayerTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As SetPlayerTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPlayerTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetPlayerTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetPlayerTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetPlayerTimeLineStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlayerTimeLineStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlayerTimeLineStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetPlayerTimeLineStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetPlayerTimeLineStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetPlayerTimeLineStartTimeCompletedEventHandler(ByVal sender As Object, ByVal e As SetPlayerTimeLineStartTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPlayerTimeLineStartTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetPlayerTimeLineStartTimeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetPlayerTimeLineStartTimeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub StartPlayerTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As StartPlayerTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StartPlayerTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StartPlayerTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StartPlayerTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub StopPlayerTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As StopPlayerTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StopPlayerTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StopPlayerTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StopPlayerTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetPlayerTimeLineEventStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlayerTimeLineEventStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlayerTimeLineEventStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetPlayerTimeLineEventStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetPlayerTimeLineEventStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AddPlayerTimeLineEventCompletedEventHandler(ByVal sender As Object, ByVal e As AddPlayerTimeLineEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPlayerTimeLineEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddPlayerTimeLineEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddPlayerTimeLineEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeletePlayerTimeLineEventCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePlayerTimeLineEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePlayerTimeLineEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeletePlayerTimeLineEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeletePlayerTimeLineEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetRecorderTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As SetRecorderTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetRecorderTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetRecorderTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetRecorderTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetRecorderTimeLineStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecorderTimeLineStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecorderTimeLineStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetRecorderTimeLineStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetRecorderTimeLineStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetRecorderTimeLineStartTimeCompletedEventHandler(ByVal sender As Object, ByVal e As SetRecorderTimeLineStartTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetRecorderTimeLineStartTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetRecorderTimeLineStartTimeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetRecorderTimeLineStartTimeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub StartRecorderTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As StartRecorderTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StartRecorderTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StartRecorderTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StartRecorderTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub StopRecorderTimeLineCompletedEventHandler(ByVal sender As Object, ByVal e As StopRecorderTimeLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StopRecorderTimeLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As StopRecorderTimeLineResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),StopRecorderTimeLineResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetRecorderTimeLineEventStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecorderTimeLineEventStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecorderTimeLineEventStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GetRecorderTimeLineEventStatusResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GetRecorderTimeLineEventStatusResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AddRecorderTimeLineEventCompletedEventHandler(ByVal sender As Object, ByVal e As AddRecorderTimeLineEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddRecorderTimeLineEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddRecorderTimeLineEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddRecorderTimeLineEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeleteRecorderTimeLineEventCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteRecorderTimeLineEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteRecorderTimeLineEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeleteRecorderTimeLineEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeleteRecorderTimeLineEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetRecorderTimeLineTimeCodeGeneratorModeCompletedEventHandler(ByVal sender As Object, ByVal e As SetRecorderTimeLineTimeCodeGeneratorModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetRecorderTimeLineTimeCodeGeneratorModeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetRecorderTimeLineTimeCodeGeneratorModeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEventHandler(ByVal sender As Object, ByVal e As SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetRecorderTimeLineTimeCodeGeneratorStartTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetRecorderTimeLineTimeCodeGeneratorStartTimeResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeletePlayerTimeLineAllEventCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePlayerTimeLineAllEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePlayerTimeLineAllEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeletePlayerTimeLineAllEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeletePlayerTimeLineAllEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DeleteRecorderTimeLineAllEventCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteRecorderTimeLineAllEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteRecorderTimeLineAllEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeleteRecorderTimeLineAllEventResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeleteRecorderTimeLineAllEventResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AddEssenceMarkToUnnamedRecordingClipCompletedEventHandler(ByVal sender As Object, ByVal e As AddEssenceMarkToUnnamedRecordingClipCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddEssenceMarkToUnnamedRecordingClipCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddEssenceMarkToUnnamedRecordingClipResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddEssenceMarkToUnnamedRecordingClipResponse)
            End Get
        End Property
    End Class
End Namespace
